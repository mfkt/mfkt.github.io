{"version":3,"file":"c97d5db8-0b7e0733b060d2798017.js","mappings":"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","sources":["webpack://mkft/./node_modules/@firebase/firestore/dist/lite/index.browser.esm2017.js"],"sourcesContent":["import _get from \"/home/runner/work/mfkt.github.io/mfkt.github.io/node_modules/@babel/runtime/helpers/esm/get\";\nimport _construct from \"/home/runner/work/mfkt.github.io/mfkt.github.io/node_modules/@babel/runtime/helpers/esm/construct\";\nimport _asyncToGenerator from \"/home/runner/work/mfkt.github.io/mfkt.github.io/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _inherits from \"/home/runner/work/mfkt.github.io/mfkt.github.io/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/runner/work/mfkt.github.io/mfkt.github.io/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/runner/work/mfkt.github.io/mfkt.github.io/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _wrapNativeSuper from \"/home/runner/work/mfkt.github.io/mfkt.github.io/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper\";\nimport _toConsumableArray from \"/home/runner/work/mfkt.github.io/mfkt.github.io/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/runner/work/mfkt.github.io/mfkt.github.io/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/runner/work/mfkt.github.io/mfkt.github.io/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e16) { throw _e16; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e17) { didErr = true; err = _e17; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport _regeneratorRuntime from \"/home/runner/work/mfkt.github.io/mfkt.github.io/node_modules/@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { _registerComponent, registerVersion, _getProvider, getApp, _removeServiceInstance, SDK_VERSION } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { createMockUserToken, getModularInstance } from '@firebase/util';\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\n\nvar h = /*#__PURE__*/function () {\n  function h(t) {\n    _classCallCheck(this, h);\n\n    this.uid = t;\n  }\n\n  _createClass(h, [{\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */\n\n  }, {\n    key: \"toKey\",\n    value: function toKey() {\n      return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t.uid === this.uid;\n    }\n  }]);\n\n  return h;\n}();\n/** A user with a null UID. */\n\n\nh.UNAUTHENTICATED = new h(null), // TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nh.GOOGLE_CREDENTIALS = new h(\"google-credentials-uid\"), h.FIRST_PARTY = new h(\"first-party-uid\"), h.MOCK_USER = new h(\"mock-user\");\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar l = \"9.5.0\";\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar f = new Logger(\"@firebase/firestore\");\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */\n\nfunction d(t) {\n  f.setLogLevel(t);\n}\n\nfunction w(t) {\n  if (f.logLevel <= LogLevel.DEBUG) {\n    for (var _len = arguments.length, e = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      e[_key - 1] = arguments[_key];\n    }\n\n    var n = e.map(y);\n    f.debug.apply(f, [\"Firestore (\".concat(l, \"): \").concat(t)].concat(_toConsumableArray(n)));\n  }\n}\n\nfunction m(t) {\n  if (f.logLevel <= LogLevel.ERROR) {\n    for (var _len2 = arguments.length, e = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      e[_key2 - 1] = arguments[_key2];\n    }\n\n    var n = e.map(y);\n    f.error.apply(f, [\"Firestore (\".concat(l, \"): \").concat(t)].concat(_toConsumableArray(n)));\n  }\n}\n/**\n * @internal\n */\n\n\nfunction p(t) {\n  if (f.logLevel <= LogLevel.WARN) {\n    for (var _len3 = arguments.length, e = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      e[_key3 - 1] = arguments[_key3];\n    }\n\n    var n = e.map(y);\n    f.warn.apply(f, [\"Firestore (\".concat(l, \"): \").concat(t)].concat(_toConsumableArray(n)));\n  }\n}\n/**\n * Converts an additional log parameter to a string representation.\n */\n\n\nfunction y(t) {\n  if (\"string\" == typeof t) return t;\n\n  try {\n    return e = t, JSON.stringify(e);\n  } catch (e) {\n    // Converting to JSON failed, just log the object directly\n    return t;\n  }\n  /**\n  * @license\n  * Copyright 2020 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n\n  /** Formats an object as a JSON string, suitable for logging. */\n\n\n  var e;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */\n\n\nfunction _() {\n  var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Unexpected state\";\n  // Log the failure in addition to throw an exception, just in case the\n  // exception is swallowed.\n  var e = \"FIRESTORE (\".concat(l, \") INTERNAL ASSERTION FAILED: \") + t; // NOTE: We don't use FirestoreError here because these are internal failures\n  // that cannot be handled by the user. (Also it would create a circular\n  // dependency between the error and assert modules which doesn't work.)\n\n  throw m(e), new Error(e);\n}\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */\n\n\nfunction g(t, e) {\n  t || _();\n}\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */\n\n\nfunction b(t, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n  return t;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar v = \"ok\",\n    E = \"cancelled\",\n    T = \"unknown\",\n    I = \"invalid-argument\",\n    A = \"deadline-exceeded\",\n    P = \"not-found\",\n    R = \"already-exists\",\n    V = \"permission-denied\",\n    D = \"unauthenticated\",\n    N = \"resource-exhausted\",\n    $ = \"failed-precondition\",\n    F = \"aborted\",\n    S = \"out-of-range\",\n    q = \"unimplemented\",\n    x = \"internal\",\n    O = \"unavailable\",\n    C = \"data-loss\";\n/** An error returned by a Firestore operation. */\n\nvar L = /*#__PURE__*/function (_Error) {\n  _inherits(L, _Error);\n\n  var _super = _createSuper(L);\n\n  /** @hideconstructor */\n  function L(\n  /**\n   * The backend error code associated with this error.\n   */\n  t,\n  /**\n   * A custom error description.\n   */\n  e) {\n    var _this;\n\n    _classCallCheck(this, L);\n\n    _this = _super.call(this, e), _this.code = t, _this.message = e,\n    /** The custom name for all FirestoreErrors. */\n    _this.name = \"FirebaseError\", // HACK: We write a toString property directly because Error is not a real\n    // class and so inheritance does not work correctly. We could alternatively\n    // do the same \"back-door inheritance\" trick that FirebaseError does.\n    _this.toString = function () {\n      return \"\".concat(_this.name, \": [code=\").concat(_this.code, \"]: \").concat(_this.message);\n    };\n    return _this;\n  }\n\n  return L;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar U = function U() {\n  var _this2 = this;\n\n  _classCallCheck(this, U);\n\n  this.promise = new Promise(function (t, e) {\n    _this2.resolve = t, _this2.reject = e;\n  });\n};\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar j = function j(t, e) {\n  _classCallCheck(this, j);\n\n  this.user = e, this.type = \"OAuth\", this.authHeaders = {}, // Set the headers using Object Literal notation to avoid minification\n  this.authHeaders.Authorization = \"Bearer \".concat(t);\n};\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */\n\n\nvar k = /*#__PURE__*/function () {\n  function k() {\n    _classCallCheck(this, k);\n  }\n\n  _createClass(k, [{\n    key: \"getToken\",\n    value: function getToken() {\n      return Promise.resolve(null);\n    }\n  }, {\n    key: \"invalidateToken\",\n    value: function invalidateToken() {}\n  }, {\n    key: \"start\",\n    value: function start(t, e) {\n      // Fire with initial user.\n      t.enqueueRetryable(function () {\n        return e(h.UNAUTHENTICATED);\n      });\n    }\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {}\n  }]);\n\n  return k;\n}();\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */\n\n\nvar B = /*#__PURE__*/function () {\n  function B(t) {\n    _classCallCheck(this, B);\n\n    this.token = t,\n    /**\n     * Stores the listener registered with setChangeListener()\n     * This isn't actually necessary since the UID never changes, but we use this\n     * to verify the listen contract is adhered to in tests.\n     */\n    this.changeListener = null;\n  }\n\n  _createClass(B, [{\n    key: \"getToken\",\n    value: function getToken() {\n      return Promise.resolve(this.token);\n    }\n  }, {\n    key: \"invalidateToken\",\n    value: function invalidateToken() {}\n  }, {\n    key: \"start\",\n    value: function start(t, e) {\n      var _this3 = this;\n\n      this.changeListener = e, // Fire with initial user.\n      t.enqueueRetryable(function () {\n        return e(_this3.token.user);\n      });\n    }\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {\n      this.changeListener = null;\n    }\n  }]);\n\n  return B;\n}();\n/** Credential provider for the Lite SDK. */\n\n\nvar M = /*#__PURE__*/function () {\n  function M(t) {\n    var _this4 = this;\n\n    _classCallCheck(this, M);\n\n    this.auth = null, t.onInit(function (t) {\n      _this4.auth = t;\n    });\n  }\n\n  _createClass(M, [{\n    key: \"getToken\",\n    value: function getToken() {\n      var _this5 = this;\n\n      return this.auth ? this.auth.getToken().then(function (t) {\n        return t ? (g(\"string\" == typeof t.accessToken), new j(t.accessToken, new h(_this5.auth.getUid()))) : null;\n      }) : Promise.resolve(null);\n    }\n  }, {\n    key: \"invalidateToken\",\n    value: function invalidateToken() {}\n  }, {\n    key: \"start\",\n    value: function start(t, e) {}\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {}\n  }]);\n\n  return M;\n}();\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */\n\n\nvar Q = /*#__PURE__*/function () {\n  function Q(t, e, n) {\n    _classCallCheck(this, Q);\n\n    this.t = t, this.i = e, this.o = n, this.type = \"FirstParty\", this.user = h.FIRST_PARTY;\n  }\n\n  _createClass(Q, [{\n    key: \"authHeaders\",\n    get: function get() {\n      var t = {\n        \"X-Goog-AuthUser\": this.i\n      },\n          e = this.t.auth.getAuthHeaderValueForFirstParty([]); // Use array notation to prevent minification\n\n      return e && (t.Authorization = e), this.o && (t[\"X-Goog-Iam-Authorization-Token\"] = this.o), t;\n    }\n  }]);\n\n  return Q;\n}();\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */\n\n\nvar z = /*#__PURE__*/function () {\n  function z(t, e, n) {\n    _classCallCheck(this, z);\n\n    this.t = t, this.i = e, this.o = n;\n  }\n\n  _createClass(z, [{\n    key: \"getToken\",\n    value: function getToken() {\n      return Promise.resolve(new Q(this.t, this.i, this.o));\n    }\n  }, {\n    key: \"start\",\n    value: function start(t, e) {\n      // Fire with initial uid.\n      t.enqueueRetryable(function () {\n        return e(h.FIRST_PARTY);\n      });\n    }\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {}\n  }, {\n    key: \"invalidateToken\",\n    value: function invalidateToken() {}\n  }]);\n\n  return z;\n}();\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar G =\n/**\n * Constructs a DatabaseInfo using the provided host, databaseId and\n * persistenceKey.\n *\n * @param databaseId - The database to use.\n * @param appId - The Firebase App Id.\n * @param persistenceKey - A unique identifier for this Firestore's local\n * storage (used in conjunction with the databaseId).\n * @param host - The Firestore backend host to connect to.\n * @param ssl - Whether to use SSL when connecting.\n * @param forceLongPolling - Whether to use the forceLongPolling option\n * when using WebChannel as the network transport.\n * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n * option when using WebChannel as the network transport.\n * @param useFetchStreams Whether to use the Fetch API instead of\n * XMLHTTPRequest\n */\nfunction G(t, e, n, r, s, i, o, u) {\n  _classCallCheck(this, G);\n\n  this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n};\n/** The default database name for a project. */\n\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\n\n\nvar W = /*#__PURE__*/function () {\n  function W(t, e) {\n    _classCallCheck(this, W);\n\n    this.projectId = t, this.database = e || \"(default)\";\n  }\n\n  _createClass(W, [{\n    key: \"isDefaultDatabase\",\n    get: function get() {\n      return \"(default)\" === this.database;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t instanceof W && t.projectId === this.projectId && t.database === this.database;\n    }\n  }]);\n\n  return W;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Path represents an ordered sequence of string segments.\n */\n\n\nvar H = /*#__PURE__*/function () {\n  function H(t, e, n) {\n    _classCallCheck(this, H);\n\n    void 0 === e ? e = 0 : e > t.length && _(), void 0 === n ? n = t.length - e : n > t.length - e && _(), this.segments = t, this.offset = e, this.len = n;\n  }\n\n  _createClass(H, [{\n    key: \"length\",\n    get: function get() {\n      return this.len;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return 0 === H.comparator(this, t);\n    }\n  }, {\n    key: \"child\",\n    value: function child(t) {\n      var e = this.segments.slice(this.offset, this.limit());\n      return t instanceof H ? t.forEach(function (t) {\n        e.push(t);\n      }) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */\n\n  }, {\n    key: \"limit\",\n    value: function limit() {\n      return this.offset + this.length;\n    }\n  }, {\n    key: \"popFirst\",\n    value: function popFirst(t) {\n      return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n  }, {\n    key: \"popLast\",\n    value: function popLast() {\n      return this.construct(this.segments, this.offset, this.length - 1);\n    }\n  }, {\n    key: \"firstSegment\",\n    value: function firstSegment() {\n      return this.segments[this.offset];\n    }\n  }, {\n    key: \"lastSegment\",\n    value: function lastSegment() {\n      return this.get(this.length - 1);\n    }\n  }, {\n    key: \"get\",\n    value: function get(t) {\n      return this.segments[this.offset + t];\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return 0 === this.length;\n    }\n  }, {\n    key: \"isPrefixOf\",\n    value: function isPrefixOf(t) {\n      if (t.length < this.length) return !1;\n\n      for (var e = 0; e < this.length; e++) {\n        if (this.get(e) !== t.get(e)) return !1;\n      }\n\n      return !0;\n    }\n  }, {\n    key: \"isImmediateParentOf\",\n    value: function isImmediateParentOf(t) {\n      if (this.length + 1 !== t.length) return !1;\n\n      for (var e = 0; e < this.length; e++) {\n        if (this.get(e) !== t.get(e)) return !1;\n      }\n\n      return !0;\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(t) {\n      for (var e = this.offset, n = this.limit(); e < n; e++) {\n        t(this.segments[e]);\n      }\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      return this.segments.slice(this.offset, this.limit());\n    }\n  }], [{\n    key: \"comparator\",\n    value: function comparator(t, e) {\n      var n = Math.min(t.length, e.length);\n\n      for (var r = 0; r < n; r++) {\n        var _n2 = t.get(r),\n            s = e.get(r);\n\n        if (_n2 < s) return -1;\n        if (_n2 > s) return 1;\n      }\n\n      return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n  }]);\n\n  return H;\n}();\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */\n\n\nvar Y = /*#__PURE__*/function (_H) {\n  _inherits(Y, _H);\n\n  var _super2 = _createSuper(Y);\n\n  function Y() {\n    _classCallCheck(this, Y);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(Y, [{\n    key: \"construct\",\n    value: function construct(t, e, n) {\n      return new Y(t, e, n);\n    }\n  }, {\n    key: \"canonicalString\",\n    value: function canonicalString() {\n      // NOTE: The client is ignorant of any path segments containing escape\n      // sequences (e.g. __id123__) and just passes them through raw (they exist\n      // for legacy reasons and should not be used frequently).\n      return this.toArray().join(\"/\");\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */\n\n  }], [{\n    key: \"fromString\",\n    value: function fromString() {\n      // NOTE: The client is ignorant of any path segments containing escape\n      // sequences (e.g. __id123__) and just passes them through raw (they exist\n      // for legacy reasons and should not be used frequently).\n      var e = [];\n\n      for (var _len4 = arguments.length, t = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        t[_key4] = arguments[_key4];\n      }\n\n      for (var _i = 0, _t2 = t; _i < _t2.length; _i++) {\n        var n = _t2[_i];\n        if (n.indexOf(\"//\") >= 0) throw new L(I, \"Invalid segment (\".concat(n, \"). Paths must not contain // in them.\")); // Strip leading and traling slashed.\n\n        e.push.apply(e, _toConsumableArray(n.split(\"/\").filter(function (t) {\n          return t.length > 0;\n        })));\n      }\n\n      return new Y(e);\n    }\n  }, {\n    key: \"emptyPath\",\n    value: function emptyPath() {\n      return new Y([]);\n    }\n  }]);\n\n  return Y;\n}(H);\n\nvar K = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */\n\nvar J = /*#__PURE__*/function (_H2) {\n  _inherits(J, _H2);\n\n  var _super3 = _createSuper(J);\n\n  function J() {\n    _classCallCheck(this, J);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(J, [{\n    key: \"construct\",\n    value: function construct(t, e, n) {\n      return new J(t, e, n);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */\n\n  }, {\n    key: \"canonicalString\",\n    value: function canonicalString() {\n      return this.toArray().map(function (t) {\n        return t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), J.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t;\n      }).join(\".\");\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */\n\n  }, {\n    key: \"isKeyField\",\n    value: function isKeyField() {\n      return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */\n\n  }], [{\n    key: \"isValidIdentifier\",\n    value: function isValidIdentifier(t) {\n      return K.test(t);\n    }\n  }, {\n    key: \"keyField\",\n    value: function keyField() {\n      return new J([\"__name__\"]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */\n\n  }, {\n    key: \"fromServerFormat\",\n    value: function fromServerFormat(t) {\n      var e = [];\n      var n = \"\",\n          r = 0;\n\n      var s = function s() {\n        if (0 === n.length) throw new L(I, \"Invalid field path (\".concat(t, \"). Paths must not be empty, begin with '.', end with '.', or contain '..'\"));\n        e.push(n), n = \"\";\n      };\n\n      var i = !1;\n\n      for (; r < t.length;) {\n        var _e2 = t[r];\n\n        if (\"\\\\\" === _e2) {\n          if (r + 1 === t.length) throw new L(I, \"Path has trailing escape character: \" + t);\n          var _e3 = t[r + 1];\n          if (\"\\\\\" !== _e3 && \".\" !== _e3 && \"`\" !== _e3) throw new L(I, \"Path has invalid escape sequence: \" + t);\n          n += _e3, r += 2;\n        } else \"`\" === _e2 ? (i = !i, r++) : \".\" !== _e2 || i ? (n += _e2, r++) : (s(), r++);\n      }\n\n      if (s(), i) throw new L(I, \"Unterminated ` in path: \" + t);\n      return new J(e);\n    }\n  }, {\n    key: \"emptyPath\",\n    value: function emptyPath() {\n      return new J([]);\n    }\n  }]);\n\n  return J;\n}(H);\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @internal\n */\n\n\nvar Z = /*#__PURE__*/function () {\n  function Z(t) {\n    _classCallCheck(this, Z);\n\n    this.path = t;\n  }\n\n  _createClass(Z, [{\n    key: \"hasCollectionId\",\n    value:\n    /** Returns true if the document is in the specified collectionId. */\n    function hasCollectionId(t) {\n      return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return null !== t && 0 === Y.comparator(this.path, t.path);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.path.toString();\n    }\n  }], [{\n    key: \"fromPath\",\n    value: function fromPath(t) {\n      return new Z(Y.fromString(t));\n    }\n  }, {\n    key: \"fromName\",\n    value: function fromName(t) {\n      return new Z(Y.fromString(t).popFirst(5));\n    }\n  }, {\n    key: \"comparator\",\n    value: function comparator(t, e) {\n      return Y.comparator(t.path, e.path);\n    }\n  }, {\n    key: \"isDocumentKey\",\n    value: function isDocumentKey(t) {\n      return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */\n\n  }, {\n    key: \"fromSegments\",\n    value: function fromSegments(t) {\n      return new Z(new Y(t.slice()));\n    }\n  }]);\n\n  return Z;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction X(t, e, n) {\n  if (!n) throw new L(I, \"Function \".concat(t, \"() cannot be called with an empty \").concat(e, \".\"));\n}\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\n\n\nfunction tt(t) {\n  if (!Z.isDocumentKey(t)) throw new L(I, \"Invalid document reference. Document references must have an even number of segments, but \".concat(t, \" has \").concat(t.length, \".\"));\n}\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */\n\n\nfunction et(t) {\n  if (Z.isDocumentKey(t)) throw new L(I, \"Invalid collection reference. Collection references must have an odd number of segments, but \".concat(t, \" has \").concat(t.length, \".\"));\n}\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n\n/** Returns a string describing the type / value of the provided input. */\n\n\nfunction nt(t) {\n  if (void 0 === t) return \"undefined\";\n  if (null === t) return \"null\";\n  if (\"string\" == typeof t) return t.length > 20 && (t = \"\".concat(t.substring(0, 20), \"...\")), JSON.stringify(t);\n  if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n\n  if (\"object\" == typeof t) {\n    if (t instanceof Array) return \"an array\";\n    {\n      var e =\n      /** try to get the constructor name for an object. */\n      function (t) {\n        if (t.constructor) return t.constructor.name;\n        return null;\n      }\n      /**\n      * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n      * underlying instance. Throws if  `obj` is not an instance of `T`.\n      *\n      * This cast is used in the Lite and Full SDK to verify instance types for\n      * arguments passed to the public API.\n      * @internal\n      */\n      (t);\n\n      return e ? \"a custom \".concat(e, \" object\") : \"an object\";\n    }\n  }\n\n  return \"function\" == typeof t ? \"a function\" : _();\n}\n\nfunction rt(t, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n  if (\"_delegate\" in t && ( // Unwrap Compat types\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  t = t._delegate), !(t instanceof e)) {\n    if (e.name === t.constructor.name) throw new L(I, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n    {\n      var n = nt(t);\n      throw new L(I, \"Expected type '\".concat(e.name, \"', but it was: \").concat(n));\n    }\n  }\n\n  return t;\n}\n\nfunction st(t, e) {\n  if (e <= 0) throw new L(I, \"Function \".concat(t, \"() requires a positive number, but it was: \").concat(e, \".\"));\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns whether a variable is either undefined or null.\n */\n\n\nfunction it(t) {\n  return null == t;\n}\n/** Returns whether the value represents -0. */\n\n\nfunction ot(t) {\n  // Detect if the value is -0.0. Based on polyfill from\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n  return 0 === t && 1 / t == -1 / 0;\n}\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar ut = {\n  BatchGetDocuments: \"batchGet\",\n  Commit: \"commit\",\n  RunQuery: \"runQuery\"\n};\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\n\nvar ct, at;\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\n\nfunction ht(t) {\n  if (void 0 === t) return m(\"RPC_ERROR\", \"HTTP error has no status\"), T; // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n  // status codes but the mapping is not bijective. In each case of ambiguity\n  // this function chooses a primary error.\n  // [1]\n  // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n\n  switch (t) {\n    case 200:\n      // OK\n      return v;\n\n    case 400:\n      // Bad Request\n      return $;\n    // Other possibilities based on the forward mapping\n    // return Code.INVALID_ARGUMENT;\n    // return Code.OUT_OF_RANGE;\n\n    case 401:\n      // Unauthorized\n      return D;\n\n    case 403:\n      // Forbidden\n      return V;\n\n    case 404:\n      // Not Found\n      return P;\n\n    case 409:\n      // Conflict\n      return F;\n    // Other possibilities:\n    // return Code.ALREADY_EXISTS;\n\n    case 416:\n      // Range Not Satisfiable\n      return S;\n\n    case 429:\n      // Too Many Requests\n      return N;\n\n    case 499:\n      // Client Closed Request\n      return E;\n\n    case 500:\n      // Internal Server Error\n      return T;\n    // Other possibilities:\n    // return Code.INTERNAL;\n    // return Code.DATA_LOSS;\n\n    case 501:\n      // Unimplemented\n      return q;\n\n    case 503:\n      // Service Unavailable\n      return O;\n\n    case 504:\n      // Gateway Timeout\n      return A;\n\n    default:\n      return t >= 200 && t < 300 ? v : t >= 400 && t < 500 ? $ : t >= 500 && t < 600 ? x : T;\n  }\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */\n\n\n(at = ct || (ct = {}))[at.OK = 0] = \"OK\", at[at.CANCELLED = 1] = \"CANCELLED\", at[at.UNKNOWN = 2] = \"UNKNOWN\", at[at.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", at[at.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", at[at.NOT_FOUND = 5] = \"NOT_FOUND\", at[at.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", at[at.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", at[at.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", at[at.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", at[at.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", at[at.ABORTED = 10] = \"ABORTED\", at[at.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", at[at.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", at[at.INTERNAL = 13] = \"INTERNAL\", at[at.UNAVAILABLE = 14] = \"UNAVAILABLE\", at[at.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nvar lt = /*#__PURE__*/function (_ref) {\n  _inherits(lt, _ref);\n\n  var _super4 = _createSuper(lt);\n\n  /**\n   * @param databaseInfo - The connection info.\n   * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n   */\n  function lt(t, e) {\n    var _this6;\n\n    _classCallCheck(this, lt);\n\n    _this6 = _super4.call(this, t), _this6.T = e;\n    return _this6;\n  }\n\n  _createClass(lt, [{\n    key: \"I\",\n    value: function I(t, e) {\n      throw new Error(\"Not supported by FetchConnection\");\n    }\n  }, {\n    key: \"g\",\n    value: function () {\n      var _g = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(t, e, n, r) {\n        var s, i;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                s = JSON.stringify(r);\n                _context.prev = 1;\n                _context.next = 4;\n                return this.T(e, {\n                  method: \"POST\",\n                  headers: n,\n                  body: s\n                });\n\n              case 4:\n                i = _context.sent;\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n                throw new L(ht(_context.t0.status), \"Request failed with error: \" + _context.t0.statusText);\n\n              case 10:\n                if (i.ok) {\n                  _context.next = 12;\n                  break;\n                }\n\n                throw new L(ht(i.status), \"Request failed with error: \" + i.statusText);\n\n              case 12:\n                return _context.abrupt(\"return\", i.json());\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 7]]);\n      }));\n\n      function g(_x, _x2, _x3, _x4) {\n        return _g.apply(this, arguments);\n      }\n\n      return g;\n    }()\n  }]);\n\n  return lt;\n}(\n/*#__PURE__*/\n\n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nfunction () {\n  function _class(t) {\n    _classCallCheck(this, _class);\n\n    this.databaseInfo = t, this.databaseId = t.databaseId;\n    var e = t.ssl ? \"https\" : \"http\";\n    this.u = e + \"://\" + t.host, this.h = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n  }\n\n  _createClass(_class, [{\n    key: \"l\",\n    value: function l(t, e, n, r) {\n      var s = this.m(t, e);\n      w(\"RestConnection\", \"Sending: \", s, n);\n      var i = {};\n      return this.p(i, r), this.g(t, s, i, n).then(function (t) {\n        return w(\"RestConnection\", \"Received: \", t), t;\n      }, function (e) {\n        throw p(\"RestConnection\", \"\".concat(t, \" failed with error: \"), e, \"url: \", s, \"request:\", n), e;\n      });\n    }\n  }, {\n    key: \"v\",\n    value: function v(t, e, n, r) {\n      // The REST API automatically aggregates all of the streamed results, so we\n      // can just use the normal invoke() method.\n      return this.l(t, e, n, r);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */\n\n  }, {\n    key: \"p\",\n    value:\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */\n    function p(t, e) {\n      if (t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + l, // Content-Type: text/plain will avoid preflight requests which might\n      // mess with CORS and redirects by proxies. If we add custom headers\n      // we will need to change this code to potentially use the $httpOverwrite\n      // parameter supported by ESF to avoid triggering preflight requests.\n      t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), e) for (var n in e.authHeaders) {\n        e.authHeaders.hasOwnProperty(n) && (t[n] = e.authHeaders[n]);\n      }\n    }\n  }, {\n    key: \"m\",\n    value: function m(t, e) {\n      var n = ut[t];\n      return \"\".concat(this.u, \"/v1/\").concat(e, \":\").concat(n);\n    }\n  }]);\n\n  return _class;\n}());\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Initializes the HTTP connection for the REST API. */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\n\n\nfunction ft(t) {\n  // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n  var e = // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  \"undefined\" != typeof self && (self.crypto || self.msCrypto),\n      n = new Uint8Array(t);\n  if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n);else // Falls back to Math.random\n    for (var _e4 = 0; _e4 < t; _e4++) {\n      n[_e4] = Math.floor(256 * Math.random());\n    }\n  return n;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar dt = /*#__PURE__*/function () {\n  function dt() {\n    _classCallCheck(this, dt);\n  }\n\n  _createClass(dt, null, [{\n    key: \"A\",\n    value: function A() {\n      // Alphanumeric characters\n      var t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\",\n          e = Math.floor(256 / t.length) * t.length; // The largest byte value that is a multiple of `char.length`.\n\n      var n = \"\";\n\n      for (; n.length < 20;) {\n        var r = ft(40);\n\n        for (var s = 0; s < r.length; ++s) {\n          // Only accept values that are [0, maxMultiple), this ensures they can\n          // be evenly mapped to indices of `chars` via a modulo operation.\n          n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n        }\n      }\n\n      return n;\n    }\n  }]);\n\n  return dt;\n}();\n\nfunction wt(t, e) {\n  return t < e ? -1 : t > e ? 1 : 0;\n}\n/** Helper to compare arrays using isEqual(). */\n\n\nfunction mt(t, e, n) {\n  return t.length === e.length && t.every(function (t, r) {\n    return n(t, e[r]);\n  });\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\n\n\nvar pt = /*#__PURE__*/function () {\n  /**\n   * Creates a new timestamp.\n   *\n   * @param seconds - The number of seconds of UTC time since Unix epoch\n   *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n   *     9999-12-31T23:59:59Z inclusive.\n   * @param nanoseconds - The non-negative fractions of a second at nanosecond\n   *     resolution. Negative second values with fractions must still have\n   *     non-negative nanoseconds values that count forward in time. Must be\n   *     from 0 to 999,999,999 inclusive.\n   */\n  function pt(\n  /**\n   * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n   */\n  t,\n  /**\n   * The fractions of a second at nanosecond resolution.*\n   */\n  e) {\n    _classCallCheck(this, pt);\n\n    if (this.seconds = t, this.nanoseconds = e, e < 0) throw new L(I, \"Timestamp nanoseconds out of range: \" + e);\n    if (e >= 1e9) throw new L(I, \"Timestamp nanoseconds out of range: \" + e);\n    if (t < -62135596800) throw new L(I, \"Timestamp seconds out of range: \" + t); // This will break in the year 10,000.\n\n    if (t >= 253402300800) throw new L(I, \"Timestamp seconds out of range: \" + t);\n  }\n  /**\n   * Creates a new timestamp with the current date, with millisecond precision.\n   *\n   * @returns a new timestamp representing the current date.\n   */\n\n\n  _createClass(pt, [{\n    key: \"toDate\",\n    value:\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */\n    function toDate() {\n      return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */\n\n  }, {\n    key: \"toMillis\",\n    value: function toMillis() {\n      return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n  }, {\n    key: \"_compareTo\",\n    value: function _compareTo(t) {\n      return this.seconds === t.seconds ? wt(this.nanoseconds, t.nanoseconds) : wt(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        seconds: this.seconds,\n        nanoseconds: this.nanoseconds\n      };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */\n\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      // This method returns a string of the form <seconds>.<nanoseconds> where\n      // <seconds> is translated to have a non-negative value and both <seconds>\n      // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n      // Strings with this format then have a lexiographical ordering that matches\n      // the expected ordering. The <seconds> translation is done to avoid having\n      // a leading negative sign (i.e. a leading '-' character) in its string\n      // representation, which would affect its lexiographical ordering.\n      var t = this.seconds - -62135596800; // Note: Up to 12 decimal digits are required to represent all valid\n      // 'seconds' values.\n\n      return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n  }], [{\n    key: \"now\",\n    value: function now() {\n      return pt.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */\n\n  }, {\n    key: \"fromDate\",\n    value: function fromDate(t) {\n      return pt.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */\n\n  }, {\n    key: \"fromMillis\",\n    value: function fromMillis(t) {\n      var e = Math.floor(t / 1e3),\n          n = Math.floor(1e6 * (t - 1e3 * e));\n      return new pt(e, n);\n    }\n  }]);\n\n  return pt;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */\n\n\nvar yt = /*#__PURE__*/function () {\n  function yt(t) {\n    _classCallCheck(this, yt);\n\n    this.timestamp = t;\n  }\n\n  _createClass(yt, [{\n    key: \"compareTo\",\n    value: function compareTo(t) {\n      return this.timestamp._compareTo(t.timestamp);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */\n\n  }, {\n    key: \"toMicroseconds\",\n    value: function toMicroseconds() {\n      // Convert to microseconds.\n      return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n  }, {\n    key: \"toTimestamp\",\n    value: function toTimestamp() {\n      return this.timestamp;\n    }\n  }], [{\n    key: \"fromTimestamp\",\n    value: function fromTimestamp(t) {\n      return new yt(t);\n    }\n  }, {\n    key: \"min\",\n    value: function min() {\n      return new yt(new pt(0, 0));\n    }\n  }]);\n\n  return yt;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction _t(t) {\n  var e = 0;\n\n  for (var n in t) {\n    Object.prototype.hasOwnProperty.call(t, n) && e++;\n  }\n\n  return e;\n}\n\nfunction gt(t, e) {\n  for (var n in t) {\n    Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n  }\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */\n\n\nvar bt = /*#__PURE__*/function () {\n  function bt(t) {\n    _classCallCheck(this, bt);\n\n    this.fields = t, // TODO(dimond): validation of FieldMask\n    // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n    t.sort(J.comparator);\n  }\n  /**\n   * Verifies that `fieldPath` is included by at least one field in this field\n   * mask.\n   *\n   * This is an O(n) operation, where `n` is the size of the field mask.\n   */\n\n\n  _createClass(bt, [{\n    key: \"covers\",\n    value: function covers(t) {\n      var _iterator = _createForOfIteratorHelper(this.fields),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var e = _step.value;\n          if (e.isPrefixOf(t)) return !0;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return !1;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return mt(this.fields, t.fields, function (t, e) {\n        return t.isEqual(e);\n      });\n    }\n  }]);\n\n  return bt;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Converts a Base64 encoded string to a binary string. */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\n\n\nvar vt = /*#__PURE__*/function () {\n  function vt(t) {\n    _classCallCheck(this, vt);\n\n    this.binaryString = t;\n  }\n\n  _createClass(vt, [{\n    key: \"toBase64\",\n    value: function toBase64() {\n      return t = this.binaryString, btoa(t);\n      /** Converts a binary string to a Base64 encoded string. */\n\n      var t;\n    }\n  }, {\n    key: \"toUint8Array\",\n    value: function toUint8Array() {\n      return function (t) {\n        var e = new Uint8Array(t.length);\n\n        for (var n = 0; n < t.length; n++) {\n          e[n] = t.charCodeAt(n);\n        }\n\n        return e;\n      }\n      /**\n      * @license\n      * Copyright 2020 Google LLC\n      *\n      * Licensed under the Apache License, Version 2.0 (the \"License\");\n      * you may not use this file except in compliance with the License.\n      * You may obtain a copy of the License at\n      *\n      *   http://www.apache.org/licenses/LICENSE-2.0\n      *\n      * Unless required by applicable law or agreed to in writing, software\n      * distributed under the License is distributed on an \"AS IS\" BASIS,\n      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n      * See the License for the specific language governing permissions and\n      * limitations under the License.\n      */\n      // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n      (this.binaryString);\n    }\n  }, {\n    key: \"approximateByteSize\",\n    value: function approximateByteSize() {\n      return 2 * this.binaryString.length;\n    }\n  }, {\n    key: \"compareTo\",\n    value: function compareTo(t) {\n      return wt(this.binaryString, t.binaryString);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this.binaryString === t.binaryString;\n    }\n  }], [{\n    key: \"fromBase64String\",\n    value: function fromBase64String(t) {\n      var e = atob(t);\n      return new vt(e);\n    }\n  }, {\n    key: \"fromUint8Array\",\n    value: function fromUint8Array(t) {\n      var e =\n      /**\n      * Helper function to convert an Uint8array to a binary string.\n      */\n      function (t) {\n        var e = \"\";\n\n        for (var n = 0; n < t.length; ++n) {\n          e += String.fromCharCode(t[n]);\n        }\n\n        return e;\n      }\n      /**\n      * Helper function to convert a binary string to an Uint8Array.\n      */\n      (t);\n\n      return new vt(e);\n    }\n  }]);\n\n  return vt;\n}();\n\nvt.EMPTY_BYTE_STRING = new vt(\"\");\nvar Et = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */\n\nfunction Tt(t) {\n  // The json interface (for the browser) will return an iso timestamp string,\n  // while the proto js library (for node) will return a\n  // google.protobuf.Timestamp instance.\n  if (g(!!t), \"string\" == typeof t) {\n    // The date string can have higher precision (nanos) than the Date class\n    // (millis), so we do some custom parsing here.\n    // Parse the nanos right out of the string.\n    var e = 0;\n    var n = Et.exec(t);\n\n    if (g(!!n), n[1]) {\n      // Pad the fraction out to 9 digits (nanos).\n      var _t3 = n[1];\n      _t3 = (_t3 + \"000000000\").substr(0, 9), e = Number(_t3);\n    } // Parse the date to get the seconds.\n\n\n    var r = new Date(t);\n    return {\n      seconds: Math.floor(r.getTime() / 1e3),\n      nanos: e\n    };\n  }\n\n  return {\n    seconds: It(t.seconds),\n    nanos: It(t.nanos)\n  };\n}\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */\n\n\nfunction It(t) {\n  // TODO(bjornick): Handle int64 greater than 53 bits.\n  return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n/** Converts the possible Proto types for Blobs into a ByteString. */\n\n\nfunction At(t) {\n  return \"string\" == typeof t ? vt.fromBase64String(t) : vt.fromUint8Array(t);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */\n\n\nfunction Pt(t) {\n  var e, n;\n  return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */\n\n\nfunction Rt(t) {\n  var e = t.mapValue.fields.__previous_value__;\n  return Pt(e) ? Rt(e) : e;\n}\n/**\n * Returns the local time at which this timestamp was first set.\n */\n\n\nfunction Vt(t) {\n  var e = Tt(t.mapValue.fields.__local_write_time__.timestampValue);\n  return new pt(e.seconds, e.nanos);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Extracts the backend's type order for the provided value. */\n\n\nfunction Dt(t) {\n  return \"nullValue\" in t ? 0\n  /* NullValue */\n  : \"booleanValue\" in t ? 1\n  /* BooleanValue */\n  : \"integerValue\" in t || \"doubleValue\" in t ? 2\n  /* NumberValue */\n  : \"timestampValue\" in t ? 3\n  /* TimestampValue */\n  : \"stringValue\" in t ? 5\n  /* StringValue */\n  : \"bytesValue\" in t ? 6\n  /* BlobValue */\n  : \"referenceValue\" in t ? 7\n  /* RefValue */\n  : \"geoPointValue\" in t ? 8\n  /* GeoPointValue */\n  : \"arrayValue\" in t ? 9\n  /* ArrayValue */\n  : \"mapValue\" in t ? Pt(t) ? 4\n  /* ServerTimestampValue */\n  : 10\n  /* ObjectValue */\n  : _();\n}\n/** Tests `left` and `right` for equality based on the backend semantics. */\n\n\nfunction Nt(t, e) {\n  var n = Dt(t);\n  if (n !== Dt(e)) return !1;\n\n  switch (n) {\n    case 0\n    /* NullValue */\n    :\n      return !0;\n\n    case 1\n    /* BooleanValue */\n    :\n      return t.booleanValue === e.booleanValue;\n\n    case 4\n    /* ServerTimestampValue */\n    :\n      return Vt(t).isEqual(Vt(e));\n\n    case 3\n    /* TimestampValue */\n    :\n      return function (t, e) {\n        if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) // Use string equality for ISO 8601 timestamps\n          return t.timestampValue === e.timestampValue;\n        var n = Tt(t.timestampValue),\n            r = Tt(e.timestampValue);\n        return n.seconds === r.seconds && n.nanos === r.nanos;\n      }(t, e);\n\n    case 5\n    /* StringValue */\n    :\n      return t.stringValue === e.stringValue;\n\n    case 6\n    /* BlobValue */\n    :\n      return function (t, e) {\n        return At(t.bytesValue).isEqual(At(e.bytesValue));\n      }(t, e);\n\n    case 7\n    /* RefValue */\n    :\n      return t.referenceValue === e.referenceValue;\n\n    case 8\n    /* GeoPointValue */\n    :\n      return function (t, e) {\n        return It(t.geoPointValue.latitude) === It(e.geoPointValue.latitude) && It(t.geoPointValue.longitude) === It(e.geoPointValue.longitude);\n      }(t, e);\n\n    case 2\n    /* NumberValue */\n    :\n      return function (t, e) {\n        if (\"integerValue\" in t && \"integerValue\" in e) return It(t.integerValue) === It(e.integerValue);\n\n        if (\"doubleValue\" in t && \"doubleValue\" in e) {\n          var _n3 = It(t.doubleValue),\n              r = It(e.doubleValue);\n\n          return _n3 === r ? ot(_n3) === ot(r) : isNaN(_n3) && isNaN(r);\n        }\n\n        return !1;\n      }(t, e);\n\n    case 9\n    /* ArrayValue */\n    :\n      return mt(t.arrayValue.values || [], e.arrayValue.values || [], Nt);\n\n    case 10\n    /* ObjectValue */\n    :\n      return function (t, e) {\n        var n = t.mapValue.fields || {},\n            r = e.mapValue.fields || {};\n        if (_t(n) !== _t(r)) return !1;\n\n        for (var _t4 in n) {\n          if (n.hasOwnProperty(_t4) && (void 0 === r[_t4] || !Nt(n[_t4], r[_t4]))) return !1;\n        }\n\n        return !0;\n      }\n      /** Returns true if the ArrayValue contains the specified element. */\n      (t, e);\n\n    default:\n      return _();\n  }\n}\n\nfunction $t(t, e) {\n  return void 0 !== (t.values || []).find(function (t) {\n    return Nt(t, e);\n  });\n}\n\nfunction Ft(t, e) {\n  var n = Dt(t),\n      r = Dt(e);\n  if (n !== r) return wt(n, r);\n\n  switch (n) {\n    case 0\n    /* NullValue */\n    :\n      return 0;\n\n    case 1\n    /* BooleanValue */\n    :\n      return wt(t.booleanValue, e.booleanValue);\n\n    case 2\n    /* NumberValue */\n    :\n      return function (t, e) {\n        var n = It(t.integerValue || t.doubleValue),\n            r = It(e.integerValue || e.doubleValue);\n        return n < r ? -1 : n > r ? 1 : n === r ? 0 : // one or both are NaN.\n        isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n      }(t, e);\n\n    case 3\n    /* TimestampValue */\n    :\n      return St(t.timestampValue, e.timestampValue);\n\n    case 4\n    /* ServerTimestampValue */\n    :\n      return St(Vt(t), Vt(e));\n\n    case 5\n    /* StringValue */\n    :\n      return wt(t.stringValue, e.stringValue);\n\n    case 6\n    /* BlobValue */\n    :\n      return function (t, e) {\n        var n = At(t),\n            r = At(e);\n        return n.compareTo(r);\n      }(t.bytesValue, e.bytesValue);\n\n    case 7\n    /* RefValue */\n    :\n      return function (t, e) {\n        var n = t.split(\"/\"),\n            r = e.split(\"/\");\n\n        for (var _t5 = 0; _t5 < n.length && _t5 < r.length; _t5++) {\n          var _e5 = wt(n[_t5], r[_t5]);\n\n          if (0 !== _e5) return _e5;\n        }\n\n        return wt(n.length, r.length);\n      }(t.referenceValue, e.referenceValue);\n\n    case 8\n    /* GeoPointValue */\n    :\n      return function (t, e) {\n        var n = wt(It(t.latitude), It(e.latitude));\n        if (0 !== n) return n;\n        return wt(It(t.longitude), It(e.longitude));\n      }(t.geoPointValue, e.geoPointValue);\n\n    case 9\n    /* ArrayValue */\n    :\n      return function (t, e) {\n        var n = t.values || [],\n            r = e.values || [];\n\n        for (var _t6 = 0; _t6 < n.length && _t6 < r.length; ++_t6) {\n          var _e6 = Ft(n[_t6], r[_t6]);\n\n          if (_e6) return _e6;\n        }\n\n        return wt(n.length, r.length);\n      }(t.arrayValue, e.arrayValue);\n\n    case 10\n    /* ObjectValue */\n    :\n      return function (t, e) {\n        var n = t.fields || {},\n            r = Object.keys(n),\n            s = e.fields || {},\n            i = Object.keys(s); // Even though MapValues are likely sorted correctly based on their insertion\n        // order (e.g. when received from the backend), local modifications can bring\n        // elements out of order. We need to re-sort the elements to ensure that\n        // canonical IDs are independent of insertion order.\n\n        r.sort(), i.sort();\n\n        for (var _t7 = 0; _t7 < r.length && _t7 < i.length; ++_t7) {\n          var _e7 = wt(r[_t7], i[_t7]);\n\n          if (0 !== _e7) return _e7;\n          var o = Ft(n[r[_t7]], s[i[_t7]]);\n          if (0 !== o) return o;\n        }\n\n        return wt(r.length, i.length);\n      }\n      /** Returns a reference value for the provided database and key. */\n      (t.mapValue, e.mapValue);\n\n    default:\n      throw _();\n  }\n}\n\nfunction St(t, e) {\n  if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return wt(t, e);\n  var n = Tt(t),\n      r = Tt(e),\n      s = wt(n.seconds, r.seconds);\n  return 0 !== s ? s : wt(n.nanos, r.nanos);\n}\n\nfunction qt(t, e) {\n  return {\n    referenceValue: \"projects/\".concat(t.projectId, \"/databases/\").concat(t.database, \"/documents/\").concat(e.path.canonicalString())\n  };\n}\n/** Returns true if `value` is an ArrayValue. */\n\n\nfunction xt(t) {\n  return !!t && \"arrayValue\" in t;\n}\n/** Returns true if `value` is a NullValue. */\n\n\nfunction Ot(t) {\n  return !!t && \"nullValue\" in t;\n}\n/** Returns true if `value` is NaN. */\n\n\nfunction Ct(t) {\n  return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n/** Returns true if `value` is a MapValue. */\n\n\nfunction Lt(t) {\n  return !!t && \"mapValue\" in t;\n}\n/** Creates a deep copy of `source`. */\n\n\nfunction Ut(t) {\n  if (t.geoPointValue) return {\n    geoPointValue: Object.assign({}, t.geoPointValue)\n  };\n  if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n    timestampValue: Object.assign({}, t.timestampValue)\n  };\n\n  if (t.mapValue) {\n    var e = {\n      mapValue: {\n        fields: {}\n      }\n    };\n    return gt(t.mapValue.fields, function (t, n) {\n      return e.mapValue.fields[t] = Ut(n);\n    }), e;\n  }\n\n  if (t.arrayValue) {\n    var _e8 = {\n      arrayValue: {\n        values: []\n      }\n    };\n\n    for (var n = 0; n < (t.arrayValue.values || []).length; ++n) {\n      _e8.arrayValue.values[n] = Ut(t.arrayValue.values[n]);\n    }\n\n    return _e8;\n  }\n\n  return Object.assign({}, t);\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */\n\n\nvar jt = /*#__PURE__*/function () {\n  function jt(t) {\n    _classCallCheck(this, jt);\n\n    this.value = t;\n  }\n\n  _createClass(jt, [{\n    key: \"field\",\n    value:\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */\n    function field(t) {\n      if (t.isEmpty()) return this.value;\n      {\n        var e = this.value;\n\n        for (var n = 0; n < t.length - 1; ++n) {\n          if (e = (e.mapValue.fields || {})[t.get(n)], !Lt(e)) return null;\n        }\n\n        return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n      }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(t, e) {\n      this.getFieldsMap(t.popLast())[t.lastSegment()] = Ut(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */\n\n  }, {\n    key: \"setAll\",\n    value: function setAll(t) {\n      var _this7 = this;\n\n      var e = J.emptyPath(),\n          n = {},\n          r = [];\n      t.forEach(function (t, s) {\n        if (!e.isImmediateParentOf(s)) {\n          // Insert the accumulated changes at this parent location\n          var _t8 = _this7.getFieldsMap(e);\n\n          _this7.applyChanges(_t8, n, r), n = {}, r = [], e = s.popLast();\n        }\n\n        t ? n[s.lastSegment()] = Ut(t) : r.push(s.lastSegment());\n      });\n      var s = this.getFieldsMap(e);\n      this.applyChanges(s, n, r);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      var e = this.field(t.popLast());\n      Lt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return Nt(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */\n\n  }, {\n    key: \"getFieldsMap\",\n    value: function getFieldsMap(t) {\n      var e = this.value;\n      e.mapValue.fields || (e.mapValue = {\n        fields: {}\n      });\n\n      for (var n = 0; n < t.length; ++n) {\n        var r = e.mapValue.fields[t.get(n)];\n        Lt(r) && r.mapValue.fields || (r = {\n          mapValue: {\n            fields: {}\n          }\n        }, e.mapValue.fields[t.get(n)] = r), e = r;\n      }\n\n      return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */\n\n  }, {\n    key: \"applyChanges\",\n    value: function applyChanges(t, e, n) {\n      gt(e, function (e, n) {\n        return t[e] = n;\n      });\n\n      var _iterator2 = _createForOfIteratorHelper(n),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _e9 = _step2.value;\n          delete t[_e9];\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new jt(Ut(this.value));\n    }\n  }], [{\n    key: \"empty\",\n    value: function empty() {\n      return new jt({\n        mapValue: {}\n      });\n    }\n  }]);\n\n  return jt;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */\n\n\nvar kt = /*#__PURE__*/function () {\n  function kt(t, e, n, r, s) {\n    _classCallCheck(this, kt);\n\n    this.key = t, this.documentType = e, this.version = n, this.data = r, this.documentState = s;\n  }\n  /**\n   * Creates a document with no known version or data, but which can serve as\n   * base document for mutations.\n   */\n\n\n  _createClass(kt, [{\n    key: \"convertToFoundDocument\",\n    value:\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */\n    function convertToFoundDocument(t, e) {\n      return this.version = t, this.documentType = 1\n      /* FOUND_DOCUMENT */\n      , this.data = e, this.documentState = 0\n      /* SYNCED */\n      , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */\n\n  }, {\n    key: \"convertToNoDocument\",\n    value: function convertToNoDocument(t) {\n      return this.version = t, this.documentType = 2\n      /* NO_DOCUMENT */\n      , this.data = jt.empty(), this.documentState = 0\n      /* SYNCED */\n      , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */\n\n  }, {\n    key: \"convertToUnknownDocument\",\n    value: function convertToUnknownDocument(t) {\n      return this.version = t, this.documentType = 3\n      /* UNKNOWN_DOCUMENT */\n      , this.data = jt.empty(), this.documentState = 2\n      /* HAS_COMMITTED_MUTATIONS */\n      , this;\n    }\n  }, {\n    key: \"setHasCommittedMutations\",\n    value: function setHasCommittedMutations() {\n      return this.documentState = 2\n      /* HAS_COMMITTED_MUTATIONS */\n      , this;\n    }\n  }, {\n    key: \"setHasLocalMutations\",\n    value: function setHasLocalMutations() {\n      return this.documentState = 1\n      /* HAS_LOCAL_MUTATIONS */\n      , this;\n    }\n  }, {\n    key: \"hasLocalMutations\",\n    get: function get() {\n      return 1\n      /* HAS_LOCAL_MUTATIONS */\n      === this.documentState;\n    }\n  }, {\n    key: \"hasCommittedMutations\",\n    get: function get() {\n      return 2\n      /* HAS_COMMITTED_MUTATIONS */\n      === this.documentState;\n    }\n  }, {\n    key: \"hasPendingWrites\",\n    get: function get() {\n      return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n  }, {\n    key: \"isValidDocument\",\n    value: function isValidDocument() {\n      return 0\n      /* INVALID */\n      !== this.documentType;\n    }\n  }, {\n    key: \"isFoundDocument\",\n    value: function isFoundDocument() {\n      return 1\n      /* FOUND_DOCUMENT */\n      === this.documentType;\n    }\n  }, {\n    key: \"isNoDocument\",\n    value: function isNoDocument() {\n      return 2\n      /* NO_DOCUMENT */\n      === this.documentType;\n    }\n  }, {\n    key: \"isUnknownDocument\",\n    value: function isUnknownDocument() {\n      return 3\n      /* UNKNOWN_DOCUMENT */\n      === this.documentType;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t instanceof kt && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new kt(this.key, this.documentType, this.version, this.data.clone(), this.documentState);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Document(\".concat(this.key, \", \").concat(this.version, \", \").concat(JSON.stringify(this.data.value), \", {documentType: \").concat(this.documentType, \"}), {documentState: \").concat(this.documentState, \"})\");\n    }\n  }], [{\n    key: \"newInvalidDocument\",\n    value: function newInvalidDocument(t) {\n      return new kt(t, 0\n      /* INVALID */\n      , yt.min(), jt.empty(), 0\n      /* SYNCED */\n      );\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */\n\n  }, {\n    key: \"newFoundDocument\",\n    value: function newFoundDocument(t, e, n) {\n      return new kt(t, 1\n      /* FOUND_DOCUMENT */\n      , e, n, 0\n      /* SYNCED */\n      );\n    }\n    /** Creates a new document that is known to not exist at the given version. */\n\n  }, {\n    key: \"newNoDocument\",\n    value: function newNoDocument(t, e) {\n      return new kt(t, 2\n      /* NO_DOCUMENT */\n      , e, jt.empty(), 0\n      /* SYNCED */\n      );\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */\n\n  }, {\n    key: \"newUnknownDocument\",\n    value: function newUnknownDocument(t, e) {\n      return new kt(t, 3\n      /* UNKNOWN_DOCUMENT */\n      , e, jt.empty(), 2\n      /* HAS_COMMITTED_MUTATIONS */\n      );\n    }\n  }]);\n\n  return kt;\n}();\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\n\n\nvar Bt = function Bt(t) {\n  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  var i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n  var o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n\n  _classCallCheck(this, Bt);\n\n  this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, this.startAt = i, this.endAt = o, this.P = null;\n};\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */\n\n\nfunction Mt(t) {\n  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  var i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n  var o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n  return new Bt(t, e, n, r, s, i, o);\n}\n\nvar Qt = /*#__PURE__*/function (_ref2) {\n  _inherits(Qt, _ref2);\n\n  var _super5 = _createSuper(Qt);\n\n  function Qt(t, e, n) {\n    var _this8;\n\n    _classCallCheck(this, Qt);\n\n    _this8 = _super5.call(this), _this8.field = t, _this8.op = e, _this8.value = n;\n    return _this8;\n  }\n  /**\n   * Creates a filter based on the provided arguments.\n   */\n\n\n  _createClass(Qt, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var e = t.data.field(this.field); // Types do not have to match in NOT_EQUAL filters.\n\n      return \"!=\"\n      /* NOT_EQUAL */\n      === this.op ? null !== e && this.V(Ft(e, this.value)) : null !== e && Dt(this.value) === Dt(e) && this.V(Ft(e, this.value)); // Only compare types with matching backend order (such as double and int).\n    }\n  }, {\n    key: \"V\",\n    value: function V(t) {\n      switch (this.op) {\n        case \"<\"\n        /* LESS_THAN */\n        :\n          return t < 0;\n\n        case \"<=\"\n        /* LESS_THAN_OR_EQUAL */\n        :\n          return t <= 0;\n\n        case \"==\"\n        /* EQUAL */\n        :\n          return 0 === t;\n\n        case \"!=\"\n        /* NOT_EQUAL */\n        :\n          return 0 !== t;\n\n        case \">\"\n        /* GREATER_THAN */\n        :\n          return t > 0;\n\n        case \">=\"\n        /* GREATER_THAN_OR_EQUAL */\n        :\n          return t >= 0;\n\n        default:\n          return _();\n      }\n    }\n  }, {\n    key: \"D\",\n    value: function D() {\n      return [\"<\"\n      /* LESS_THAN */\n      , \"<=\"\n      /* LESS_THAN_OR_EQUAL */\n      , \">\"\n      /* GREATER_THAN */\n      , \">=\"\n      /* GREATER_THAN_OR_EQUAL */\n      , \"!=\"\n      /* NOT_EQUAL */\n      , \"not-in\"\n      /* NOT_IN */\n      ].indexOf(this.op) >= 0;\n    }\n  }], [{\n    key: \"create\",\n    value: function create(t, e, n) {\n      return t.isKeyField() ? \"in\"\n      /* IN */\n      === e || \"not-in\"\n      /* NOT_IN */\n      === e ? this.R(t, e, n) : new zt(t, e, n) : \"array-contains\"\n      /* ARRAY_CONTAINS */\n      === e ? new Yt(t, n) : \"in\"\n      /* IN */\n      === e ? new Kt(t, n) : \"not-in\"\n      /* NOT_IN */\n      === e ? new Jt(t, n) : \"array-contains-any\"\n      /* ARRAY_CONTAINS_ANY */\n      === e ? new Zt(t, n) : new Qt(t, e, n);\n    }\n  }, {\n    key: \"R\",\n    value: function R(t, e, n) {\n      return \"in\"\n      /* IN */\n      === e ? new Gt(t, n) : new Wt(t, n);\n    }\n  }]);\n\n  return Qt;\n}( /*#__PURE__*/function () {\n  function _class2() {\n    _classCallCheck(this, _class2);\n  }\n\n  return _class2;\n}());\n/** Filter that matches on key fields (i.e. '__name__'). */\n\n\nvar zt = /*#__PURE__*/function (_Qt) {\n  _inherits(zt, _Qt);\n\n  var _super6 = _createSuper(zt);\n\n  function zt(t, e, n) {\n    var _this9;\n\n    _classCallCheck(this, zt);\n\n    _this9 = _super6.call(this, t, e, n), _this9.key = Z.fromName(n.referenceValue);\n    return _this9;\n  }\n\n  _createClass(zt, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var e = Z.comparator(t.key, this.key);\n      return this.V(e);\n    }\n  }]);\n\n  return zt;\n}(Qt);\n/** Filter that matches on key fields within an array. */\n\n\nvar Gt = /*#__PURE__*/function (_Qt2) {\n  _inherits(Gt, _Qt2);\n\n  var _super7 = _createSuper(Gt);\n\n  function Gt(t, e) {\n    var _this10;\n\n    _classCallCheck(this, Gt);\n\n    _this10 = _super7.call(this, t, \"in\"\n    /* IN */\n    , e), _this10.keys = Ht(\"in\"\n    /* IN */\n    , e);\n    return _this10;\n  }\n\n  _createClass(Gt, [{\n    key: \"matches\",\n    value: function matches(t) {\n      return this.keys.some(function (e) {\n        return e.isEqual(t.key);\n      });\n    }\n  }]);\n\n  return Gt;\n}(Qt);\n/** Filter that matches on key fields not present within an array. */\n\n\nvar Wt = /*#__PURE__*/function (_Qt3) {\n  _inherits(Wt, _Qt3);\n\n  var _super8 = _createSuper(Wt);\n\n  function Wt(t, e) {\n    var _this11;\n\n    _classCallCheck(this, Wt);\n\n    _this11 = _super8.call(this, t, \"not-in\"\n    /* NOT_IN */\n    , e), _this11.keys = Ht(\"not-in\"\n    /* NOT_IN */\n    , e);\n    return _this11;\n  }\n\n  _createClass(Wt, [{\n    key: \"matches\",\n    value: function matches(t) {\n      return !this.keys.some(function (e) {\n        return e.isEqual(t.key);\n      });\n    }\n  }]);\n\n  return Wt;\n}(Qt);\n\nfunction Ht(t, e) {\n  var n;\n  return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map(function (t) {\n    return Z.fromName(t.referenceValue);\n  });\n}\n/** A Filter that implements the array-contains operator. */\n\n\nvar Yt = /*#__PURE__*/function (_Qt4) {\n  _inherits(Yt, _Qt4);\n\n  var _super9 = _createSuper(Yt);\n\n  function Yt(t, e) {\n    _classCallCheck(this, Yt);\n\n    return _super9.call(this, t, \"array-contains\"\n    /* ARRAY_CONTAINS */\n    , e);\n  }\n\n  _createClass(Yt, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var e = t.data.field(this.field);\n      return xt(e) && $t(e.arrayValue, this.value);\n    }\n  }]);\n\n  return Yt;\n}(Qt);\n/** A Filter that implements the IN operator. */\n\n\nvar Kt = /*#__PURE__*/function (_Qt5) {\n  _inherits(Kt, _Qt5);\n\n  var _super10 = _createSuper(Kt);\n\n  function Kt(t, e) {\n    _classCallCheck(this, Kt);\n\n    return _super10.call(this, t, \"in\"\n    /* IN */\n    , e);\n  }\n\n  _createClass(Kt, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var e = t.data.field(this.field);\n      return null !== e && $t(this.value.arrayValue, e);\n    }\n  }]);\n\n  return Kt;\n}(Qt);\n/** A Filter that implements the not-in operator. */\n\n\nvar Jt = /*#__PURE__*/function (_Qt6) {\n  _inherits(Jt, _Qt6);\n\n  var _super11 = _createSuper(Jt);\n\n  function Jt(t, e) {\n    _classCallCheck(this, Jt);\n\n    return _super11.call(this, t, \"not-in\"\n    /* NOT_IN */\n    , e);\n  }\n\n  _createClass(Jt, [{\n    key: \"matches\",\n    value: function matches(t) {\n      if ($t(this.value.arrayValue, {\n        nullValue: \"NULL_VALUE\"\n      })) return !1;\n      var e = t.data.field(this.field);\n      return null !== e && !$t(this.value.arrayValue, e);\n    }\n  }]);\n\n  return Jt;\n}(Qt);\n/** A Filter that implements the array-contains-any operator. */\n\n\nvar Zt = /*#__PURE__*/function (_Qt7) {\n  _inherits(Zt, _Qt7);\n\n  var _super12 = _createSuper(Zt);\n\n  function Zt(t, e) {\n    _classCallCheck(this, Zt);\n\n    return _super12.call(this, t, \"array-contains-any\"\n    /* ARRAY_CONTAINS_ANY */\n    , e);\n  }\n\n  _createClass(Zt, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var _this12 = this;\n\n      var e = t.data.field(this.field);\n      return !(!xt(e) || !e.arrayValue.values) && e.arrayValue.values.some(function (t) {\n        return $t(_this12.value.arrayValue, t);\n      });\n    }\n  }]);\n\n  return Zt;\n}(Qt);\n/**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */\n\n\nvar Xt = function Xt(t, e) {\n  _classCallCheck(this, Xt);\n\n  this.position = t, this.before = e;\n};\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */\n\n\nvar te = function te(t) {\n  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"asc\";\n\n  _classCallCheck(this, te);\n\n  this.field = t, this.dir = e;\n};\n\nfunction ee(t, e) {\n  return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\nfunction ne(t, e) {\n  if (null === t) return null === e;\n  if (null === e) return !1;\n  if (t.before !== e.before || t.position.length !== e.position.length) return !1;\n\n  for (var n = 0; n < t.position.length; n++) {\n    if (!Nt(t.position[n], e.position[n])) return !1;\n  }\n\n  return !0;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */\n\n\nvar re =\n/**\n * Initializes a Query with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n */\nfunction re(t) {\n  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  var i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : \"F\";\n  var o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n  var u = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n\n  _classCallCheck(this, re);\n\n  this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.N = null, // The corresponding `Target` of this `Query` instance.\n  this.$ = null, this.startAt, this.endAt;\n};\n/** Creates a new Query for a query that matches all documents at `path` */\n\n\nfunction se(t) {\n  return !it(t.limit) && \"L\"\n  /* Last */\n  === t.limitType;\n}\n\nfunction ie(t) {\n  return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction oe(t) {\n  var _iterator3 = _createForOfIteratorHelper(t.filters),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var e = _step3.value;\n      if (e.D()) return e.field;\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n\n  return null;\n}\n/**\n * Checks if any of the provided Operators are included in the query and\n * returns the first one that is, or null if none are.\n */\n\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\n\n\nfunction ue(t) {\n  return null !== t.collectionGroup;\n}\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */\n\n\nfunction ce(t) {\n  var e = b(t);\n\n  if (null === e.N) {\n    e.N = [];\n\n    var _t9 = oe(e),\n        n = ie(e);\n\n    if (null !== _t9 && null === n) // In order to implicitly add key ordering, we must also add the\n      // inequality filter field for it to be a valid query.\n      // Note that the default inequality field and key ordering is ascending.\n      _t9.isKeyField() || e.N.push(new te(_t9)), e.N.push(new te(J.keyField(), \"asc\"\n      /* ASCENDING */\n      ));else {\n      var _t10 = !1;\n\n      var _iterator4 = _createForOfIteratorHelper(e.explicitOrderBy),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _n4 = _step4.value;\n          e.N.push(_n4), _n4.field.isKeyField() && (_t10 = !0);\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      if (!_t10) {\n        // The order of the implicit key ordering always matches the last\n        // explicit order by\n        var _t11 = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\"\n        /* ASCENDING */\n        ;\n\n        e.N.push(new te(J.keyField(), _t11));\n      }\n    }\n  }\n\n  return e.N;\n}\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */\n\n\nfunction ae(t) {\n  var e = b(t);\n  if (!e.$) if (\"F\"\n  /* First */\n  === e.limitType) e.$ = Mt(e.path, e.collectionGroup, ce(e), e.filters, e.limit, e.startAt, e.endAt);else {\n    // Flip the orderBy directions since we want the last results\n    var _t12 = [];\n\n    var _iterator5 = _createForOfIteratorHelper(ce(e)),\n        _step5;\n\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var _n5 = _step5.value;\n\n        var _e10 = \"desc\"\n        /* DESCENDING */\n        === _n5.dir ? \"asc\"\n        /* ASCENDING */\n        : \"desc\"\n        /* DESCENDING */\n        ;\n\n        _t12.push(new te(_n5.field, _e10));\n      } // We need to swap the cursors to match the now-flipped query ordering.\n\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n\n    var n = e.endAt ? new Xt(e.endAt.position, !e.endAt.before) : null,\n        r = e.startAt ? new Xt(e.startAt.position, !e.startAt.before) : null; // Now return as a LimitType.First query.\n\n    e.$ = Mt(e.path, e.collectionGroup, _t12, e.filters, e.limit, n, r);\n  }\n  return e.$;\n}\n\nfunction he(t, e) {\n  return function (t, e) {\n    if (t.limit !== e.limit) return !1;\n    if (t.orderBy.length !== e.orderBy.length) return !1;\n\n    for (var _n6 = 0; _n6 < t.orderBy.length; _n6++) {\n      if (!ee(t.orderBy[_n6], e.orderBy[_n6])) return !1;\n    }\n\n    if (t.filters.length !== e.filters.length) return !1;\n\n    for (var s = 0; s < t.filters.length; s++) {\n      if (n = t.filters[s], r = e.filters[s], n.op !== r.op || !n.field.isEqual(r.field) || !Nt(n.value, r.value)) return !1;\n    }\n\n    var n, r;\n    return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!ne(t.startAt, e.startAt) && ne(t.endAt, e.endAt);\n  }(ae(t), ae(e)) && t.limitType === e.limitType;\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\n\n\nfunction le(t, e) {\n  return function (t) {\n    return \"number\" == typeof t && Number.isInteger(t) && !ot(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n  }(e) ?\n  /**\n  * Returns an IntegerValue for `value`.\n  */\n  function (t) {\n    return {\n      integerValue: \"\" + t\n    };\n  }(e) : function (t, e) {\n    if (t.F) {\n      if (isNaN(e)) return {\n        doubleValue: \"NaN\"\n      };\n      if (e === 1 / 0) return {\n        doubleValue: \"Infinity\"\n      };\n      if (e === -1 / 0) return {\n        doubleValue: \"-Infinity\"\n      };\n    }\n\n    return {\n      doubleValue: ot(e) ? \"-0\" : e\n    };\n  }(t, e);\n}\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Used to represent a field transform on a mutation. */\n\n\nvar fe = function fe() {\n  _classCallCheck(this, fe);\n\n  // Make sure that the structural type of `TransformOperation` is unique.\n  // See https://github.com/microsoft/TypeScript/issues/5451\n  this._ = void 0;\n};\n/** Transforms a value into a server-generated timestamp. */\n\n\nvar de = /*#__PURE__*/function (_fe) {\n  _inherits(de, _fe);\n\n  var _super13 = _createSuper(de);\n\n  function de() {\n    _classCallCheck(this, de);\n\n    return _super13.apply(this, arguments);\n  }\n\n  return de;\n}(fe);\n/** Transforms an array value via a union operation. */\n\n\nvar we = /*#__PURE__*/function (_fe2) {\n  _inherits(we, _fe2);\n\n  var _super14 = _createSuper(we);\n\n  function we(t) {\n    var _this13;\n\n    _classCallCheck(this, we);\n\n    _this13 = _super14.call(this), _this13.elements = t;\n    return _this13;\n  }\n\n  return we;\n}(fe);\n/** Transforms an array value via a remove operation. */\n\n\nvar me = /*#__PURE__*/function (_fe3) {\n  _inherits(me, _fe3);\n\n  var _super15 = _createSuper(me);\n\n  function me(t) {\n    var _this14;\n\n    _classCallCheck(this, me);\n\n    _this14 = _super15.call(this), _this14.elements = t;\n    return _this14;\n  }\n\n  return me;\n}(fe);\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */\n\n\nvar pe = /*#__PURE__*/function (_fe4) {\n  _inherits(pe, _fe4);\n\n  var _super16 = _createSuper(pe);\n\n  function pe(t, e) {\n    var _this15;\n\n    _classCallCheck(this, pe);\n\n    _this15 = _super16.call(this), _this15.S = t, _this15.q = e;\n    return _this15;\n  }\n\n  return pe;\n}(fe);\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** A field path and the TransformOperation to perform upon it. */\n\n\nvar ye = function ye(t, e) {\n  _classCallCheck(this, ye);\n\n  this.field = t, this.transform = e;\n};\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */\n\n\nvar _e = /*#__PURE__*/function () {\n  function _e(t, e) {\n    _classCallCheck(this, _e);\n\n    this.updateTime = t, this.exists = e;\n  }\n  /** Creates a new empty Precondition. */\n\n\n  _createClass(_e, [{\n    key: \"isNone\",\n    get:\n    /** Returns whether this Precondition is empty. */\n    function get() {\n      return void 0 === this.updateTime && void 0 === this.exists;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n  }], [{\n    key: \"none\",\n    value: function none() {\n      return new _e();\n    }\n    /** Creates a new Precondition with an exists flag. */\n\n  }, {\n    key: \"exists\",\n    value: function exists(t) {\n      return new _e(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */\n\n  }, {\n    key: \"updateTime\",\n    value: function updateTime(t) {\n      return new _e(t);\n    }\n  }]);\n\n  return _e;\n}();\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */\n\n\nvar ge = function ge() {\n  _classCallCheck(this, ge);\n};\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */\n\n\nvar be = /*#__PURE__*/function (_ge) {\n  _inherits(be, _ge);\n\n  var _super17 = _createSuper(be);\n\n  function be(t, e, n) {\n    var _this16;\n\n    var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n\n    _classCallCheck(this, be);\n\n    _this16 = _super17.call(this), _this16.key = t, _this16.value = e, _this16.precondition = n, _this16.fieldTransforms = r, _this16.type = 0\n    /* Set */\n    ;\n    return _this16;\n  }\n\n  return be;\n}(ge);\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */\n\n\nvar ve = /*#__PURE__*/function (_ge2) {\n  _inherits(ve, _ge2);\n\n  var _super18 = _createSuper(ve);\n\n  function ve(t, e, n, r) {\n    var _this17;\n\n    var s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n\n    _classCallCheck(this, ve);\n\n    _this17 = _super18.call(this), _this17.key = t, _this17.data = e, _this17.fieldMask = n, _this17.precondition = r, _this17.fieldTransforms = s, _this17.type = 1\n    /* Patch */\n    ;\n    return _this17;\n  }\n\n  return ve;\n}(ge);\n/** A mutation that deletes the document at the given key. */\n\n\nvar Ee = /*#__PURE__*/function (_ge3) {\n  _inherits(Ee, _ge3);\n\n  var _super19 = _createSuper(Ee);\n\n  function Ee(t, e) {\n    var _this18;\n\n    _classCallCheck(this, Ee);\n\n    _this18 = _super19.call(this), _this18.key = t, _this18.precondition = e, _this18.type = 2\n    /* Delete */\n    , _this18.fieldTransforms = [];\n    return _this18;\n  }\n\n  return Ee;\n}(ge);\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */\n\n\nvar Te = /*#__PURE__*/function (_ge4) {\n  _inherits(Te, _ge4);\n\n  var _super20 = _createSuper(Te);\n\n  function Te(t, e) {\n    var _this19;\n\n    _classCallCheck(this, Te);\n\n    _this19 = _super20.call(this), _this19.key = t, _this19.precondition = e, _this19.type = 3\n    /* Verify */\n    , _this19.fieldTransforms = [];\n    return _this19;\n  }\n\n  return Te;\n}(ge);\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar Ie = function () {\n  var t = {\n    asc: \"ASCENDING\",\n    desc: \"DESCENDING\"\n  };\n  return t;\n}(),\n    Ae = function () {\n  var t = {\n    \"<\": \"LESS_THAN\",\n    \"<=\": \"LESS_THAN_OR_EQUAL\",\n    \">\": \"GREATER_THAN\",\n    \">=\": \"GREATER_THAN_OR_EQUAL\",\n    \"==\": \"EQUAL\",\n    \"!=\": \"NOT_EQUAL\",\n    \"array-contains\": \"ARRAY_CONTAINS\",\n    in: \"IN\",\n    \"not-in\": \"NOT_IN\",\n    \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n  };\n  return t;\n}();\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\n\n\nvar Pe = function Pe(t, e) {\n  _classCallCheck(this, Pe);\n\n  this.databaseId = t, this.F = e;\n};\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\n\n\nfunction Re(t, e) {\n  if (t.F) {\n    return \"\".concat(new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\"), \".\").concat((\"000000000\" + e.nanoseconds).slice(-9), \"Z\");\n  }\n\n  return {\n    seconds: \"\" + e.seconds,\n    nanos: e.nanoseconds\n  };\n}\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\n\n\nfunction Ve(t, e) {\n  return t.F ? e.toBase64() : e.toUint8Array();\n}\n\nfunction De(t, e) {\n  return Re(t, e.toTimestamp());\n}\n\nfunction Ne(t) {\n  return g(!!t), yt.fromTimestamp(function (t) {\n    var e = Tt(t);\n    return new pt(e.seconds, e.nanos);\n  }(t));\n}\n\nfunction $e(t, e) {\n  return function (t) {\n    return new Y([\"projects\", t.projectId, \"databases\", t.database]);\n  }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction Fe(t, e) {\n  return $e(t.databaseId, e.path);\n}\n\nfunction Se(t, e) {\n  var n = function (t) {\n    var e = Y.fromString(t);\n    return g(ze(e)), e;\n  }(e);\n\n  if (n.get(1) !== t.databaseId.projectId) throw new L(I, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n  if (n.get(3) !== t.databaseId.database) throw new L(I, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n  return new Z((g((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n  var r;\n  /** Creates a Document proto from key and fields (but no create/update time) */\n}\n\nfunction qe(t, e) {\n  return $e(t.databaseId, e);\n}\n\nfunction xe(t) {\n  return new Y([\"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database]).canonicalString();\n}\n\nfunction Oe(t, e, n) {\n  return {\n    name: Fe(t, e),\n    fields: n.value.mapValue.fields\n  };\n}\n\nfunction Ce(t, e) {\n  return \"found\" in e ? function (t, e) {\n    g(!!e.found), e.found.name, e.found.updateTime;\n    var n = Se(t, e.found.name),\n        r = Ne(e.found.updateTime),\n        s = new jt({\n      mapValue: {\n        fields: e.found.fields\n      }\n    });\n    return kt.newFoundDocument(n, r, s);\n  }(t, e) : \"missing\" in e ? function (t, e) {\n    g(!!e.missing), g(!!e.readTime);\n    var n = Se(t, e.missing),\n        r = Ne(e.readTime);\n    return kt.newNoDocument(n, r);\n  }(t, e) : _();\n}\n\nfunction Le(t, e) {\n  var n;\n  if (e instanceof be) n = {\n    update: Oe(t, e.key, e.value)\n  };else if (e instanceof Ee) n = {\n    delete: Fe(t, e.key)\n  };else if (e instanceof ve) n = {\n    update: Oe(t, e.key, e.data),\n    updateMask: Qe(e.fieldMask)\n  };else {\n    if (!(e instanceof Te)) return _();\n    n = {\n      verify: Fe(t, e.key)\n    };\n  }\n  return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map(function (t) {\n    return function (t, e) {\n      var n = e.transform;\n      if (n instanceof de) return {\n        fieldPath: e.field.canonicalString(),\n        setToServerValue: \"REQUEST_TIME\"\n      };\n      if (n instanceof we) return {\n        fieldPath: e.field.canonicalString(),\n        appendMissingElements: {\n          values: n.elements\n        }\n      };\n      if (n instanceof me) return {\n        fieldPath: e.field.canonicalString(),\n        removeAllFromArray: {\n          values: n.elements\n        }\n      };\n      if (n instanceof pe) return {\n        fieldPath: e.field.canonicalString(),\n        increment: n.q\n      };\n      throw _();\n    }(0, t);\n  })), e.precondition.isNone || (n.currentDocument = function (t, e) {\n    return void 0 !== e.updateTime ? {\n      updateTime: De(t, e.updateTime)\n    } : void 0 !== e.exists ? {\n      exists: e.exists\n    } : _();\n  }(t, e.precondition)), n;\n}\n\nfunction Ue(t, e) {\n  // Dissect the path into parent, collectionId, and optional key filter.\n  var n = {\n    structuredQuery: {}\n  },\n      r = e.path;\n  null !== e.collectionGroup ? (n.parent = qe(t, r), n.structuredQuery.from = [{\n    collectionId: e.collectionGroup,\n    allDescendants: !0\n  }]) : (n.parent = qe(t, r.popLast()), n.structuredQuery.from = [{\n    collectionId: r.lastSegment()\n  }]);\n\n  var s = function (t) {\n    if (0 === t.length) return;\n    var e = t.map(function (t) {\n      return (// visible for testing\n        function (t) {\n          if (\"==\"\n          /* EQUAL */\n          === t.op) {\n            if (Ct(t.value)) return {\n              unaryFilter: {\n                field: Me(t.field),\n                op: \"IS_NAN\"\n              }\n            };\n            if (Ot(t.value)) return {\n              unaryFilter: {\n                field: Me(t.field),\n                op: \"IS_NULL\"\n              }\n            };\n          } else if (\"!=\"\n          /* NOT_EQUAL */\n          === t.op) {\n            if (Ct(t.value)) return {\n              unaryFilter: {\n                field: Me(t.field),\n                op: \"IS_NOT_NAN\"\n              }\n            };\n            if (Ot(t.value)) return {\n              unaryFilter: {\n                field: Me(t.field),\n                op: \"IS_NOT_NULL\"\n              }\n            };\n          }\n\n          return {\n            fieldFilter: {\n              field: Me(t.field),\n              op: Be(t.op),\n              value: t.value\n            }\n          };\n        }(t)\n      );\n    });\n    if (1 === e.length) return e[0];\n    return {\n      compositeFilter: {\n        op: \"AND\",\n        filters: e\n      }\n    };\n  }(e.filters);\n\n  s && (n.structuredQuery.where = s);\n\n  var i = function (t) {\n    if (0 === t.length) return;\n    return t.map(function (t) {\n      return (// visible for testing\n        function (t) {\n          return {\n            field: Me(t.field),\n            direction: ke(t.dir)\n          };\n        }(t)\n      );\n    });\n  }(e.orderBy);\n\n  i && (n.structuredQuery.orderBy = i);\n\n  var o = function (t, e) {\n    return t.F || it(e) ? e : {\n      value: e\n    };\n  }(t, e.limit);\n\n  return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = je(e.startAt)), e.endAt && (n.structuredQuery.endAt = je(e.endAt)), n;\n}\n\nfunction je(t) {\n  return {\n    before: t.before,\n    values: t.position\n  };\n} // visible for testing\n\n\nfunction ke(t) {\n  return Ie[t];\n} // visible for testing\n\n\nfunction Be(t) {\n  return Ae[t];\n}\n\nfunction Me(t) {\n  return {\n    fieldPath: t.canonicalString()\n  };\n}\n\nfunction Qe(t) {\n  var e = [];\n  return t.fields.forEach(function (t) {\n    return e.push(t.canonicalString());\n  }), {\n    fieldPaths: e\n  };\n}\n\nfunction ze(t) {\n  // Resource names have at least 4 components (project ID, database ID)\n  return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction Ge(t) {\n  return new Pe(t,\n  /* useProto3Json= */\n  !0);\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\n\n\nvar We = /*#__PURE__*/function () {\n  function We(\n  /**\n   * The AsyncQueue to run backoff operations on.\n   */\n  t,\n  /**\n   * The ID to use when scheduling backoff operations on the AsyncQueue.\n   */\n  e) {\n    var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1e3;\n    var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1.5;\n    var s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 6e4;\n\n    _classCallCheck(this, We);\n\n    this.O = t, this.timerId = e, this.C = n, this.L = r, this.U = s, this.j = 0, this.k = null,\n    /** The last backoff attempt, as epoch milliseconds. */\n    this.B = Date.now(), this.reset();\n  }\n  /**\n   * Resets the backoff delay.\n   *\n   * The very next backoffAndWait() will have no delay. If it is called again\n   * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n   * subsequent ones will increase according to the backoffFactor.\n   */\n\n\n  _createClass(We, [{\n    key: \"reset\",\n    value: function reset() {\n      this.j = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */\n\n  }, {\n    key: \"M\",\n    value: function M() {\n      this.j = this.U;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */\n\n  }, {\n    key: \"G\",\n    value: function G(t) {\n      var _this20 = this;\n\n      // Cancel any pending backoff operation.\n      this.cancel(); // First schedule using the current base (which may be 0 and should be\n      // honored as such).\n\n      var e = Math.floor(this.j + this.W()),\n          n = Math.max(0, Date.now() - this.B),\n          r = Math.max(0, e - n); // Guard against lastAttemptTime being in the future due to a clock change.\n\n      r > 0 && w(\"ExponentialBackoff\", \"Backing off for \".concat(r, \" ms (base delay: \").concat(this.j, \" ms, delay with jitter: \").concat(e, \" ms, last attempt: \").concat(n, \" ms ago)\")), this.k = this.O.enqueueAfterDelay(this.timerId, r, function () {\n        return _this20.B = Date.now(), t();\n      }), // Apply backoff factor to determine next delay and ensure it is within\n      // bounds.\n      this.j *= this.L, this.j < this.C && (this.j = this.C), this.j > this.U && (this.j = this.U);\n    }\n  }, {\n    key: \"H\",\n    value: function H() {\n      null !== this.k && (this.k.skipDelay(), this.k = null);\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      null !== this.k && (this.k.cancel(), this.k = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */\n\n  }, {\n    key: \"W\",\n    value: function W() {\n      return (Math.random() - .5) * this.j;\n    }\n  }]);\n\n  return We;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\n\n\nvar He = /*#__PURE__*/function (_ref3) {\n  _inherits(He, _ref3);\n\n  var _super21 = _createSuper(He);\n\n  function He(t, e, n) {\n    var _this21;\n\n    _classCallCheck(this, He);\n\n    _this21 = _super21.call(this), _this21.credentials = t, _this21.Y = e, _this21.S = n, _this21.K = !1;\n    return _this21;\n  }\n\n  _createClass(He, [{\n    key: \"J\",\n    value: function J() {\n      if (this.K) throw new L($, \"The client has already been terminated.\");\n    }\n    /** Gets an auth token and invokes the provided RPC. */\n\n  }, {\n    key: \"l\",\n    value: function l(t, e, n) {\n      var _this22 = this;\n\n      return this.J(), this.credentials.getToken().then(function (r) {\n        return _this22.Y.l(t, e, n, r);\n      }).catch(function (t) {\n        throw \"FirebaseError\" === t.name ? (t.code === D && _this22.credentials.invalidateToken(), t) : new L(T, t.toString());\n      });\n    }\n    /** Gets an auth token and invokes the provided RPC with streamed results. */\n\n  }, {\n    key: \"v\",\n    value: function v(t, e, n) {\n      var _this23 = this;\n\n      return this.J(), this.credentials.getToken().then(function (r) {\n        return _this23.Y.v(t, e, n, r);\n      }).catch(function (t) {\n        throw \"FirebaseError\" === t.name ? (t.code === D && _this23.credentials.invalidateToken(), t) : new L(T, t.toString());\n      });\n    }\n  }, {\n    key: \"terminate\",\n    value: function terminate() {\n      this.K = !0;\n    }\n  }]);\n\n  return He;\n}( /*#__PURE__*/function () {\n  function _class3() {\n    _classCallCheck(this, _class3);\n  }\n\n  return _class3;\n}()); // TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\n\n\nfunction Ye(_x5, _x6) {\n  return _Ye.apply(this, arguments);\n}\n\nfunction _Ye() {\n  _Ye = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(t, e) {\n    var n, r, s;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            n = b(t), r = xe(n.S) + \"/documents\", s = {\n              writes: e.map(function (t) {\n                return Le(n.S, t);\n              })\n            };\n            _context7.next = 3;\n            return n.l(\"Commit\", r, s);\n\n          case 3:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _Ye.apply(this, arguments);\n}\n\nfunction Ke(_x7, _x8) {\n  return _Ke.apply(this, arguments);\n}\n\nfunction _Ke() {\n  _Ke = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(t, e) {\n    var n, r, s, i, o, u;\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            n = b(t);\n            r = xe(n.S) + \"/documents\";\n            s = {\n              documents: e.map(function (t) {\n                return Fe(n.S, t);\n              })\n            };\n            _context8.next = 5;\n            return n.v(\"BatchGetDocuments\", r, s);\n\n          case 5:\n            i = _context8.sent;\n            o = new Map();\n            i.forEach(function (t) {\n              var e = Ce(n.S, t);\n              o.set(e.key.toString(), e);\n            });\n            u = [];\n            return _context8.abrupt(\"return\", (e.forEach(function (t) {\n              var e = o.get(t.toString());\n              g(!!e), u.push(e);\n            }), u));\n\n          case 10:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _Ke.apply(this, arguments);\n}\n\nfunction Je(_x9, _x10) {\n  return _Je.apply(this, arguments);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction _Je() {\n  _Je = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(t, e) {\n    var n, r;\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            n = b(t), r = Ue(n.S, ae(e));\n            _context9.next = 3;\n            return n.v(\"RunQuery\", r.parent, {\n              structuredQuery: r.structuredQuery\n            });\n\n          case 3:\n            return _context9.abrupt(\"return\", _context9.sent.filter(function (t) {\n              return !!t.document;\n            }).map(function (t) {\n              return function (t, e, n) {\n                var r = Se(t, e.name),\n                    s = Ne(e.updateTime),\n                    i = new jt({\n                  mapValue: {\n                    fields: e.fields\n                  }\n                }),\n                    o = kt.newFoundDocument(r, s, i);\n                return n && o.setHasCommittedMutations(), n ? o.setHasCommittedMutations() : o;\n              }(n.S, t.document, void 0);\n            }));\n\n          case 4:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _Je.apply(this, arguments);\n}\n\nvar Ze = new Map();\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\n\nfunction Xe(t) {\n  if (t._terminated) throw new L($, \"The client has already been terminated.\");\n\n  if (!Ze.has(t)) {\n    w(\"ComponentProvider\", \"Initializing Datastore\");\n\n    var i = function (t) {\n      return new lt(t, fetch.bind(null));\n    }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), new G(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))),\n        o = Ge(t._databaseId),\n        u = function (t, e, n) {\n      return new He(t, e, n);\n    }(t._credentials, i, o);\n\n    Ze.set(t, u);\n  }\n\n  var e, n, r, s;\n  /**\n  * @license\n  * Copyright 2018 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n\n  return Ze.get(t);\n}\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\n\n\nvar tn = /*#__PURE__*/function () {\n  function tn(t) {\n    _classCallCheck(this, tn);\n\n    var e;\n\n    if (void 0 === t.host) {\n      if (void 0 !== t.ssl) throw new L(I, \"Can't provide ssl option if host option is not set\");\n      this.host = \"firestore.googleapis.com\", this.ssl = true;\n    } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n\n    if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040;else {\n      if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new L(I, \"cacheSizeBytes must be at least 1048576\");\n      this.cacheSizeBytes = t.cacheSizeBytes;\n    }\n    this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, this.useFetchStreams = !!t.useFetchStreams, function (t, e, n, r) {\n      if (!0 === e && !0 === r) throw new L(I, \"\".concat(t, \" and \").concat(n, \" cannot be used together.\"));\n    }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n  }\n\n  _createClass(tn, [{\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    }\n  }]);\n\n  return tn;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link getFirestore}.\n */\n\n\nvar en = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function en(t, e) {\n    _classCallCheck(this, en);\n\n    this._credentials = e,\n    /**\n     * Whether it's a Firestore or Firestore Lite instance.\n     */\n    this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new tn({}), this._settingsFrozen = !1, t instanceof W ? this._databaseId = t : (this._app = t, this._databaseId = function (t) {\n      if (!Object.prototype.hasOwnProperty.apply(t.options, [\"projectId\"])) throw new L(I, '\"projectId\" not provided in firebase.initializeApp.');\n      return new W(t.options.projectId);\n    }\n    /**\n    * Initializes a new instance of Cloud Firestore with the provided settings.\n    * Can only be called before any other functions, including\n    * {@link getFirestore}. If the custom settings are empty, this function is\n    * equivalent to calling {@link getFirestore}.\n    *\n    * @param app - The {@link @firebase/app#FirebaseApp} with which the `Firestore` instance will\n    * be associated.\n    * @param settings - A settings object to configure the `Firestore` instance.\n    * @returns A newly initialized `Firestore` instance.\n    */\n    (t));\n  }\n  /**\n   * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n   * instance.\n   */\n\n\n  _createClass(en, [{\n    key: \"app\",\n    get: function get() {\n      if (!this._app) throw new L($, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n      return this._app;\n    }\n  }, {\n    key: \"_initialized\",\n    get: function get() {\n      return this._settingsFrozen;\n    }\n  }, {\n    key: \"_terminated\",\n    get: function get() {\n      return void 0 !== this._terminateTask;\n    }\n  }, {\n    key: \"_setSettings\",\n    value: function _setSettings(t) {\n      if (this._settingsFrozen) throw new L($, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n      this._settings = new tn(t), void 0 !== t.credentials && (this._credentials = function (t) {\n        if (!t) return new k();\n\n        switch (t.type) {\n          case \"gapi\":\n            var e = t.client; // Make sure this really is a Gapi client.\n\n            return g(!(\"object\" != typeof e || null === e || !e.auth || !e.auth.getAuthHeaderValueForFirstParty)), new z(e, t.sessionIndex || \"0\", t.iamToken || null);\n\n          case \"provider\":\n            return t.client;\n\n          default:\n            throw new L(I, \"makeCredentialsProvider failed due to invalid credential type\");\n        }\n      }(t.credentials));\n    }\n  }, {\n    key: \"_getSettings\",\n    value: function _getSettings() {\n      return this._settings;\n    }\n  }, {\n    key: \"_freezeSettings\",\n    value: function _freezeSettings() {\n      return this._settingsFrozen = !0, this._settings;\n    }\n  }, {\n    key: \"_delete\",\n    value: function _delete() {\n      return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        app: this._app,\n        databaseId: this._databaseId,\n        settings: this._settings\n      };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */\n\n  }, {\n    key: \"_terminate\",\n    value: function _terminate() {\n      return function (t) {\n        var e = Ze.get(t);\n        e && (w(\"ComponentProvider\", \"Removing Datastore\"), Ze.delete(t), e.terminate());\n      }(this), Promise.resolve();\n    }\n  }]);\n\n  return en;\n}();\n\nfunction nn(t, e) {\n  var n = _getProvider(t, \"firestore/lite\");\n\n  if (n.isInitialized()) throw new L($, \"Firestore can only be initialized once per app.\");\n  return n.initialize({\n    options: e\n  });\n}\n/**\n * Returns the existing `Firestore` instance that is associated with the\n * provided {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned `Firestore`\n * instance is associated with.\n * @returns The `Firestore` instance of the provided app.\n */\n\n\nfunction rn() {\n  var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getApp();\n  return _getProvider(e, \"firestore/lite\").getImmediate();\n}\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */\n\n\nfunction sn(t, e, n) {\n  var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var s;\n\n  var i = (t = rt(t, en))._getSettings();\n\n  if (\"firestore.googleapis.com\" !== i.host && i.host !== e && p(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), t._setSettings(Object.assign(Object.assign({}, i), {\n    host: \"\".concat(e, \":\").concat(n),\n    ssl: !1\n  })), r.mockUserToken) {\n    var _e11, _n7;\n\n    if (\"string\" == typeof r.mockUserToken) _e11 = r.mockUserToken, _n7 = h.MOCK_USER;else {\n      // Let createMockUserToken validate first (catches common mistakes like\n      // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n      _e11 = createMockUserToken(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n\n      var _i2 = r.mockUserToken.sub || r.mockUserToken.user_id;\n\n      if (!_i2) throw new L(I, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n      _n7 = new h(_i2);\n    }\n    t._credentials = new B(new j(_e11, _n7));\n  }\n}\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link getFirestore}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */\n\n\nfunction on(t) {\n  return t = rt(t, en), _removeServiceInstance(t.app, \"firestore/lite\"), t._delete();\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */\n\n\nvar un = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function un(t,\n  /**\n   * If provided, the `FirestoreDataConverter` associated with this instance.\n   */\n  e, n) {\n    _classCallCheck(this, un);\n\n    this.converter = e, this._key = n,\n    /** The type of this Firestore reference. */\n    this.type = \"document\", this.firestore = t;\n  }\n\n  _createClass(un, [{\n    key: \"_path\",\n    get: function get() {\n      return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */\n\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */\n\n  }, {\n    key: \"path\",\n    get: function get() {\n      return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */\n\n  }, {\n    key: \"parent\",\n    get: function get() {\n      return new an(this.firestore, this.converter, this._key.path.popLast());\n    }\n  }, {\n    key: \"withConverter\",\n    value: function withConverter(t) {\n      return new un(this.firestore, t, this._key);\n    }\n  }]);\n\n  return un;\n}();\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */\n\n\nvar cn = /*#__PURE__*/function () {\n  // This is the lite version of the Query class in the main SDK.\n\n  /** @hideconstructor protected */\n  function cn(t,\n  /**\n   * If provided, the `FirestoreDataConverter` associated with this instance.\n   */\n  e, n) {\n    _classCallCheck(this, cn);\n\n    this.converter = e, this._query = n,\n    /** The type of this Firestore reference. */\n    this.type = \"query\", this.firestore = t;\n  }\n\n  _createClass(cn, [{\n    key: \"withConverter\",\n    value: function withConverter(t) {\n      return new cn(this.firestore, t, this._query);\n    }\n  }]);\n\n  return cn;\n}();\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */\n\n\nvar an = /*#__PURE__*/function (_cn) {\n  _inherits(an, _cn);\n\n  var _super22 = _createSuper(an);\n\n  /** @hideconstructor */\n  function an(t, e, n) {\n    var _this24;\n\n    _classCallCheck(this, an);\n\n    _this24 = _super22.call(this, t, e, new re(n)), _this24._path = n,\n    /** The type of this Firestore reference. */\n    _this24.type = \"collection\";\n    return _this24;\n  }\n  /** The collection's identifier. */\n\n\n  _createClass(an, [{\n    key: \"id\",\n    get: function get() {\n      return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */\n\n  }, {\n    key: \"path\",\n    get: function get() {\n      return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */\n\n  }, {\n    key: \"parent\",\n    get: function get() {\n      var t = this._path.popLast();\n\n      return t.isEmpty() ? null : new un(this.firestore,\n      /* converter= */\n      null, new Z(t));\n    }\n  }, {\n    key: \"withConverter\",\n    value: function withConverter(t) {\n      return new an(this.firestore, t, this._path);\n    }\n  }]);\n\n  return an;\n}(cn);\n\nfunction hn(t, e) {\n  for (var _len5 = arguments.length, n = new Array(_len5 > 2 ? _len5 - 2 : 0), _key5 = 2; _key5 < _len5; _key5++) {\n    n[_key5 - 2] = arguments[_key5];\n  }\n\n  if (t = getModularInstance(t), X(\"collection\", \"path\", e), t instanceof en) {\n    var r = Y.fromString.apply(Y, [e].concat(n));\n    return et(r), new an(t,\n    /* converter= */\n    null, r);\n  }\n\n  {\n    if (!(t instanceof un || t instanceof an)) throw new L(I, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n\n    var _r2 = t._path.child(Y.fromString.apply(Y, [e].concat(n)));\n\n    return et(_r2), new an(t.firestore,\n    /* converter= */\n    null, _r2);\n  }\n} // TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */\n\n\nfunction ln(t, e) {\n  if (t = rt(t, en), X(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new L(I, \"Invalid collection ID '\".concat(e, \"' passed to function collectionGroup(). Collection IDs must not contain '/'.\"));\n  return new cn(t,\n  /* converter= */\n  null,\n  /**\n  * Creates a new Query for a collection group query that matches all documents\n  * within the provided collection group.\n  */\n  function (t) {\n    return new re(Y.emptyPath(), t);\n  }(e));\n}\n\nfunction fn(t, e) {\n  for (var _len6 = arguments.length, n = new Array(_len6 > 2 ? _len6 - 2 : 0), _key6 = 2; _key6 < _len6; _key6++) {\n    n[_key6 - 2] = arguments[_key6];\n  }\n\n  if (t = getModularInstance(t), // We allow omission of 'pathString' but explicitly prohibit passing in both\n  // 'undefined' and 'null'.\n  1 === arguments.length && (e = dt.A()), X(\"doc\", \"path\", e), t instanceof en) {\n    var r = Y.fromString.apply(Y, [e].concat(n));\n    return tt(r), new un(t,\n    /* converter= */\n    null, new Z(r));\n  }\n\n  {\n    if (!(t instanceof un || t instanceof an)) throw new L(I, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n\n    var _r3 = t._path.child(Y.fromString.apply(Y, [e].concat(n)));\n\n    return tt(_r3), new un(t.firestore, t instanceof an ? t.converter : null, new Z(_r3));\n  }\n}\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */\n\n\nfunction dn(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), (t instanceof un || t instanceof an) && (e instanceof un || e instanceof an) && t.firestore === e.firestore && t.path === e.path && t.converter === e.converter;\n}\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */\n\n\nfunction wn(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), t instanceof cn && e instanceof cn && t.firestore === e.firestore && he(t._query, e._query) && t.converter === e.converter;\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */\n\n\nvar mn = /*#__PURE__*/function () {\n  /**\n   * Creates a `FieldPath` from the provided field names. If more than one field\n   * name is provided, the path will point to a nested field in a document.\n   *\n   * @param fieldNames - A list of field names.\n   */\n  function mn() {\n    _classCallCheck(this, mn);\n\n    for (var _len7 = arguments.length, t = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      t[_key7] = arguments[_key7];\n    }\n\n    for (var e = 0; e < t.length; ++e) {\n      if (0 === t[e].length) throw new L(I, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n    }\n\n    this._internalPath = new J(t);\n  }\n  /**\n   * Returns true if this `FieldPath` is equal to the provided one.\n   *\n   * @param other - The `FieldPath` to compare against.\n   * @returns true if this `FieldPath` is equal to the provided one.\n   */\n\n\n  _createClass(mn, [{\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this._internalPath.isEqual(t._internalPath);\n    }\n  }]);\n\n  return mn;\n}();\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */\n\n\nfunction pn() {\n  return new mn(\"__name__\");\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An immutable object representing an array of bytes.\n */\n\n\nvar yn = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function yn(t) {\n    _classCallCheck(this, yn);\n\n    this._byteString = t;\n  }\n  /**\n   * Creates a new `Bytes` object from the given Base64 string, converting it to\n   * bytes.\n   *\n   * @param base64 - The Base64 string used to create the `Bytes` object.\n   */\n\n\n  _createClass(yn, [{\n    key: \"toBase64\",\n    value:\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */\n    function toBase64() {\n      return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */\n\n  }, {\n    key: \"toUint8Array\",\n    value: function toUint8Array() {\n      return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this._byteString.isEqual(t._byteString);\n    }\n  }], [{\n    key: \"fromBase64String\",\n    value: function fromBase64String(t) {\n      try {\n        return new yn(vt.fromBase64String(t));\n      } catch (t) {\n        throw new L(I, \"Failed to construct data from Base64 string: \" + t);\n      }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */\n\n  }, {\n    key: \"fromUint8Array\",\n    value: function fromUint8Array(t) {\n      return new yn(vt.fromUint8Array(t));\n    }\n  }]);\n\n  return yn;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */\n\n\nvar _n =\n/**\n * @param _methodName - The public API endpoint that returns this class.\n * @hideconstructor\n */\nfunction _n(t) {\n  _classCallCheck(this, _n);\n\n  this._methodName = t;\n};\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */\n\n\nvar gn = /*#__PURE__*/function () {\n  /**\n   * Creates a new immutable `GeoPoint` object with the provided latitude and\n   * longitude values.\n   * @param latitude - The latitude as number between -90 and 90.\n   * @param longitude - The longitude as number between -180 and 180.\n   */\n  function gn(t, e) {\n    _classCallCheck(this, gn);\n\n    if (!isFinite(t) || t < -90 || t > 90) throw new L(I, \"Latitude must be a number between -90 and 90, but was: \" + t);\n    if (!isFinite(e) || e < -180 || e > 180) throw new L(I, \"Longitude must be a number between -180 and 180, but was: \" + e);\n    this._lat = t, this._long = e;\n  }\n  /**\n   * The latitude of this `GeoPoint` instance.\n   */\n\n\n  _createClass(gn, [{\n    key: \"latitude\",\n    get: function get() {\n      return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */\n\n  }, {\n    key: \"longitude\",\n    get: function get() {\n      return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        latitude: this._lat,\n        longitude: this._long\n      };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */\n\n  }, {\n    key: \"_compareTo\",\n    value: function _compareTo(t) {\n      return wt(this._lat, t._lat) || wt(this._long, t._long);\n    }\n  }]);\n\n  return gn;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar bn = /^__.*__$/;\n/** The result of parsing document data (e.g. for a setData call). */\n\nvar vn = /*#__PURE__*/function () {\n  function vn(t, e, n) {\n    _classCallCheck(this, vn);\n\n    this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n  }\n\n  _createClass(vn, [{\n    key: \"toMutation\",\n    value: function toMutation(t, e) {\n      return null !== this.fieldMask ? new ve(t, this.data, this.fieldMask, e, this.fieldTransforms) : new be(t, this.data, e, this.fieldTransforms);\n    }\n  }]);\n\n  return vn;\n}();\n/** The result of parsing \"update\" data (i.e. for an updateData call). */\n\n\nvar En = /*#__PURE__*/function () {\n  function En(t, // The fieldMask does not include document transforms.\n  e, n) {\n    _classCallCheck(this, En);\n\n    this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n  }\n\n  _createClass(En, [{\n    key: \"toMutation\",\n    value: function toMutation(t, e) {\n      return new ve(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n  }]);\n\n  return En;\n}();\n\nfunction Tn(t) {\n  switch (t) {\n    case 0\n    /* Set */\n    : // fall through\n\n    case 2\n    /* MergeSet */\n    : // fall through\n\n    case 1\n    /* Update */\n    :\n      return !0;\n\n    case 3\n    /* Argument */\n    :\n    case 4\n    /* ArrayArgument */\n    :\n      return !1;\n\n    default:\n      throw _();\n  }\n}\n/** A \"context\" object passed around while parsing user data. */\n\n\nvar In = /*#__PURE__*/function () {\n  /**\n   * Initializes a ParseContext with the given source and path.\n   *\n   * @param settings - The settings for the parser.\n   * @param databaseId - The database ID of the Firestore instance.\n   * @param serializer - The serializer to use to generate the Value proto.\n   * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n   * rather than throw.\n   * @param fieldTransforms - A mutable list of field transforms encountered\n   * while parsing the data.\n   * @param fieldMask - A mutable list of field paths encountered while parsing\n   * the data.\n   *\n   * TODO(b/34871131): We don't support array paths right now, so path can be\n   * null to indicate the context represents any location within an array (in\n   * which case certain features will not work and errors will be somewhat\n   * compromised).\n   */\n  function In(t, e, n, r, s, i) {\n    _classCallCheck(this, In);\n\n    this.settings = t, this.databaseId = e, this.S = n, this.ignoreUndefinedProperties = r, // Minor hack: If fieldTransforms is undefined, we assume this is an\n    // external call and we need to validate the entire path.\n    void 0 === s && this.Z(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n  }\n\n  _createClass(In, [{\n    key: \"path\",\n    get: function get() {\n      return this.settings.path;\n    }\n  }, {\n    key: \"X\",\n    get: function get() {\n      return this.settings.X;\n    }\n    /** Returns a new context with the specified settings overwritten. */\n\n  }, {\n    key: \"tt\",\n    value: function tt(t) {\n      return new In(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.S, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n  }, {\n    key: \"et\",\n    value: function et(t) {\n      var e;\n      var n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t),\n          r = this.tt({\n        path: n,\n        nt: !1\n      });\n      return r.rt(t), r;\n    }\n  }, {\n    key: \"st\",\n    value: function st(t) {\n      var e;\n      var n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t),\n          r = this.tt({\n        path: n,\n        nt: !1\n      });\n      return r.Z(), r;\n    }\n  }, {\n    key: \"it\",\n    value: function it(t) {\n      // TODO(b/34871131): We don't support array paths right now; so make path\n      // undefined.\n      return this.tt({\n        path: void 0,\n        nt: !0\n      });\n    }\n  }, {\n    key: \"ot\",\n    value: function ot(t) {\n      return Qn(t, this.settings.methodName, this.settings.ut || !1, this.path, this.settings.ct);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */\n\n  }, {\n    key: \"contains\",\n    value: function contains(t) {\n      return void 0 !== this.fieldMask.find(function (e) {\n        return t.isPrefixOf(e);\n      }) || void 0 !== this.fieldTransforms.find(function (e) {\n        return t.isPrefixOf(e.field);\n      });\n    }\n  }, {\n    key: \"Z\",\n    value: function Z() {\n      // TODO(b/34871131): Remove null check once we have proper paths for fields\n      // within arrays.\n      if (this.path) for (var t = 0; t < this.path.length; t++) {\n        this.rt(this.path.get(t));\n      }\n    }\n  }, {\n    key: \"rt\",\n    value: function rt(t) {\n      if (0 === t.length) throw this.ot(\"Document fields must not be empty\");\n      if (Tn(this.X) && bn.test(t)) throw this.ot('Document fields cannot begin and end with \"__\"');\n    }\n  }]);\n\n  return In;\n}();\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */\n\n\nvar An = /*#__PURE__*/function () {\n  function An(t, e, n) {\n    _classCallCheck(this, An);\n\n    this.databaseId = t, this.ignoreUndefinedProperties = e, this.S = n || Ge(t);\n  }\n  /** Creates a new top-level parse context. */\n\n\n  _createClass(An, [{\n    key: \"at\",\n    value: function at(t, e, n) {\n      var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n      return new In({\n        X: t,\n        methodName: e,\n        ct: n,\n        path: J.emptyPath(),\n        nt: !1,\n        ut: r\n      }, this.databaseId, this.S, this.ignoreUndefinedProperties);\n    }\n  }]);\n\n  return An;\n}();\n\nfunction Pn(t) {\n  var e = t._freezeSettings(),\n      n = Ge(t._databaseId);\n\n  return new An(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n/** Parse document data from a set() call. */\n\n\nfunction Rn(t, e, n, r, s) {\n  var i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  var o = t.at(i.merge || i.mergeFields ? 2\n  /* MergeSet */\n  : 0\n  /* Set */\n  , e, n, s);\n  jn(\"Data must be an object, but it was:\", o, r);\n  var u = Ln(r, o);\n  var c, a;\n  if (i.merge) c = new bt(o.fieldMask), a = o.fieldTransforms;else if (i.mergeFields) {\n    var _t13 = [];\n\n    var _iterator6 = _createForOfIteratorHelper(i.mergeFields),\n        _step6;\n\n    try {\n      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n        var _r4 = _step6.value;\n\n        var _s = kn(e, _r4, n);\n\n        if (!o.contains(_s)) throw new L(I, \"Field '\".concat(_s, \"' is specified in your field mask but missing from your input data.\"));\n        zn(_t13, _s) || _t13.push(_s);\n      }\n    } catch (err) {\n      _iterator6.e(err);\n    } finally {\n      _iterator6.f();\n    }\n\n    c = new bt(_t13), a = o.fieldTransforms.filter(function (t) {\n      return c.covers(t.field);\n    });\n  } else c = null, a = o.fieldTransforms;\n  return new vn(new jt(u), c, a);\n}\n\nvar Vn = /*#__PURE__*/function (_n8) {\n  _inherits(Vn, _n8);\n\n  var _super23 = _createSuper(Vn);\n\n  function Vn() {\n    _classCallCheck(this, Vn);\n\n    return _super23.apply(this, arguments);\n  }\n\n  _createClass(Vn, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      if (2\n      /* MergeSet */\n      !== t.X) throw 1\n      /* Update */\n      === t.X ? t.ot(\"\".concat(this._methodName, \"() can only appear at the top level of your update data\")) : t.ot(\"\".concat(this._methodName, \"() cannot be used with set() unless you pass {merge:true}\")); // No transform to add for a delete, but we need to add it to our\n      // fieldMask so it gets deleted.\n\n      return t.fieldMask.push(t.path), null;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t instanceof Vn;\n    }\n  }]);\n\n  return Vn;\n}(_n);\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */\n\n\nfunction Dn(t, e, n) {\n  return new In({\n    X: 3\n    /* Argument */\n    ,\n    ct: e.settings.ct,\n    methodName: t._methodName,\n    nt: n\n  }, e.databaseId, e.S, e.ignoreUndefinedProperties);\n}\n\nvar Nn = /*#__PURE__*/function (_n9) {\n  _inherits(Nn, _n9);\n\n  var _super24 = _createSuper(Nn);\n\n  function Nn() {\n    _classCallCheck(this, Nn);\n\n    return _super24.apply(this, arguments);\n  }\n\n  _createClass(Nn, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      return new ye(t.path, new de());\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t instanceof Nn;\n    }\n  }]);\n\n  return Nn;\n}(_n);\n\nvar $n = /*#__PURE__*/function (_n10) {\n  _inherits($n, _n10);\n\n  var _super25 = _createSuper($n);\n\n  function $n(t, e) {\n    var _this25;\n\n    _classCallCheck(this, $n);\n\n    _this25 = _super25.call(this, t), _this25.ht = e;\n    return _this25;\n  }\n\n  _createClass($n, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      var e = Dn(this, t,\n      /*array=*/\n      !0),\n          n = this.ht.map(function (t) {\n        return Cn(t, e);\n      }),\n          r = new we(n);\n      return new ye(t.path, r);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      // TODO(mrschmidt): Implement isEquals\n      return this === t;\n    }\n  }]);\n\n  return $n;\n}(_n);\n\nvar Fn = /*#__PURE__*/function (_n11) {\n  _inherits(Fn, _n11);\n\n  var _super26 = _createSuper(Fn);\n\n  function Fn(t, e) {\n    var _this26;\n\n    _classCallCheck(this, Fn);\n\n    _this26 = _super26.call(this, t), _this26.ht = e;\n    return _this26;\n  }\n\n  _createClass(Fn, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      var e = Dn(this, t,\n      /*array=*/\n      !0),\n          n = this.ht.map(function (t) {\n        return Cn(t, e);\n      }),\n          r = new me(n);\n      return new ye(t.path, r);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      // TODO(mrschmidt): Implement isEquals\n      return this === t;\n    }\n  }]);\n\n  return Fn;\n}(_n);\n\nvar Sn = /*#__PURE__*/function (_n12) {\n  _inherits(Sn, _n12);\n\n  var _super27 = _createSuper(Sn);\n\n  function Sn(t, e) {\n    var _this27;\n\n    _classCallCheck(this, Sn);\n\n    _this27 = _super27.call(this, t), _this27.lt = e;\n    return _this27;\n  }\n\n  _createClass(Sn, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      var e = new pe(t.S, le(t.S, this.lt));\n      return new ye(t.path, e);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      // TODO(mrschmidt): Implement isEquals\n      return this === t;\n    }\n  }]);\n\n  return Sn;\n}(_n);\n/** Parse update data from an update() call. */\n\n\nfunction qn(t, e, n, r) {\n  var s = t.at(1\n  /* Update */\n  , e, n);\n  jn(\"Data must be an object, but it was:\", s, r);\n  var i = [],\n      o = jt.empty();\n  gt(r, function (t, r) {\n    var u = Mn(e, t, n); // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n\n    r = getModularInstance(r);\n    var c = s.st(u);\n    if (r instanceof Vn) // Add it to the field mask, but don't add anything to updateData.\n      i.push(u);else {\n      var _t14 = Cn(r, c);\n\n      null != _t14 && (i.push(u), o.set(u, _t14));\n    }\n  });\n  var u = new bt(i);\n  return new En(o, u, s.fieldTransforms);\n}\n/** Parse update data from a list of field/value arguments. */\n\n\nfunction xn(t, e, n, r, s, i) {\n  var o = t.at(1\n  /* Update */\n  , e, n),\n      u = [kn(e, r, n)],\n      c = [s];\n  if (i.length % 2 != 0) throw new L(I, \"Function \".concat(e, \"() needs to be called with an even number of arguments that alternate between field names and values.\"));\n\n  for (var _t15 = 0; _t15 < i.length; _t15 += 2) {\n    u.push(kn(e, i[_t15])), c.push(i[_t15 + 1]);\n  }\n\n  var h = [],\n      l = jt.empty(); // We iterate in reverse order to pick the last value for a field if the\n  // user specified the field multiple times.\n\n  for (var _t16 = u.length - 1; _t16 >= 0; --_t16) {\n    if (!zn(h, u[_t16])) {\n      var _e12 = u[_t16];\n      var _n13 = c[_t16]; // For Compat types, we have to \"extract\" the underlying types before\n      // performing validation.\n\n      _n13 = getModularInstance(_n13);\n\n      var _r5 = o.st(_e12);\n\n      if (_n13 instanceof Vn) // Add it to the field mask, but don't add anything to updateData.\n        h.push(_e12);else {\n        var _t17 = Cn(_n13, _r5);\n\n        null != _t17 && (h.push(_e12), l.set(_e12, _t17));\n      }\n    }\n  }\n\n  var f = new bt(h);\n  return new En(l, f, o.fieldTransforms);\n}\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */\n\n\nfunction On(t, e, n) {\n  var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n  return Cn(n, t.at(r ? 4\n  /* ArrayArgument */\n  : 3\n  /* Argument */\n  , e));\n}\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */\n\n\nfunction Cn(t, e) {\n  if (Un( // Unwrap the API type from the Compat SDK. This will return the API type\n  // from firestore-exp.\n  t = getModularInstance(t))) return jn(\"Unsupported field value:\", e, t), Ln(t, e);\n  if (t instanceof _n) // FieldValues usually parse into transforms (except FieldValue.delete())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n\n    /**\n    * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n    * context.fieldTransforms.\n    */\n    return function (t, e) {\n      // Sentinels are only supported with writes, and not within arrays.\n      if (!Tn(e.X)) throw e.ot(\"\".concat(t._methodName, \"() can only be used with update() and set()\"));\n      if (!e.path) throw e.ot(\"\".concat(t._methodName, \"() is not currently supported inside arrays\"));\n\n      var n = t._toFieldTransform(e);\n\n      n && e.fieldTransforms.push(n);\n    }\n    /**\n    * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n    *\n    * @returns The parsed value\n    */\n    (t, e), null;\n  if (void 0 === t && e.ignoreUndefinedProperties) // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n\n  if ( // If context.path is null we are inside an array and we don't support\n  // field mask paths more granular than the top-level array.\n  e.path && e.fieldMask.push(e.path), t instanceof Array) {\n    // TODO(b/34871131): Include the path containing the array in the error\n    // message.\n    // In the case of IN queries, the parsed data is an array (representing\n    // the set of values to be included for the IN query) that may directly\n    // contain additional arrays (each representing an individual field\n    // value), so we disable this validation.\n    if (e.settings.nt && 4\n    /* ArrayArgument */\n    !== e.X) throw e.ot(\"Nested arrays are not supported\");\n    return function (t, e) {\n      var n = [];\n      var r = 0;\n\n      var _iterator7 = _createForOfIteratorHelper(t),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var s = _step7.value;\n\n          var _t18 = Cn(s, e.it(r));\n\n          null == _t18 && ( // Just include nulls in the array for fields being replaced with a\n          // sentinel.\n          _t18 = {\n            nullValue: \"NULL_VALUE\"\n          }), n.push(_t18), r++;\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      return {\n        arrayValue: {\n          values: n\n        }\n      };\n    }(t, e);\n  }\n\n  return function (t, e) {\n    if (null === (t = getModularInstance(t))) return {\n      nullValue: \"NULL_VALUE\"\n    };\n    if (\"number\" == typeof t) return le(e.S, t);\n    if (\"boolean\" == typeof t) return {\n      booleanValue: t\n    };\n    if (\"string\" == typeof t) return {\n      stringValue: t\n    };\n\n    if (t instanceof Date) {\n      var n = pt.fromDate(t);\n      return {\n        timestampValue: Re(e.S, n)\n      };\n    }\n\n    if (t instanceof pt) {\n      // Firestore backend truncates precision down to microseconds. To ensure\n      // offline mode works the same with regards to truncation, perform the\n      // truncation immediately without waiting for the backend to do that.\n      var _n14 = new pt(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n\n      return {\n        timestampValue: Re(e.S, _n14)\n      };\n    }\n\n    if (t instanceof gn) return {\n      geoPointValue: {\n        latitude: t.latitude,\n        longitude: t.longitude\n      }\n    };\n    if (t instanceof yn) return {\n      bytesValue: Ve(e.S, t._byteString)\n    };\n\n    if (t instanceof un) {\n      var _n15 = e.databaseId,\n          r = t.firestore._databaseId;\n      if (!r.isEqual(_n15)) throw e.ot(\"Document reference is for database \".concat(r.projectId, \"/\").concat(r.database, \" but should be for database \").concat(_n15.projectId, \"/\").concat(_n15.database));\n      return {\n        referenceValue: $e(t.firestore._databaseId || e.databaseId, t._key.path)\n      };\n    }\n\n    throw e.ot(\"Unsupported field value: \".concat(nt(t)));\n  }\n  /**\n  * Checks whether an object looks like a JSON object that should be converted\n  * into a struct. Normal class/prototype instances are considered to look like\n  * JSON objects since they should be converted to a struct value. Arrays, Dates,\n  * GeoPoints, etc. are not considered to look like JSON objects since they map\n  * to specific FieldValue types other than ObjectValue.\n  */\n  (t, e);\n}\n\nfunction Ln(t, e) {\n  var n = {};\n  return !function (t) {\n    for (var _e13 in t) {\n      if (Object.prototype.hasOwnProperty.call(t, _e13)) return !1;\n    }\n\n    return !0;\n  }(t) ? gt(t, function (t, r) {\n    var s = Cn(r, e.et(t));\n    null != s && (n[t] = s);\n  }) : // If we encounter an empty object, we explicitly add it to the update\n  // mask to ensure that the server creates a map entry.\n  e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n    mapValue: {\n      fields: n\n    }\n  };\n}\n\nfunction Un(t) {\n  return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof pt || t instanceof gn || t instanceof yn || t instanceof un || t instanceof _n);\n}\n\nfunction jn(t, e, n) {\n  if (!Un(n) || !function (t) {\n    return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n  }(n)) {\n    var r = nt(n);\n    throw \"an object\" === r ? e.ot(t + \" a custom object\") : e.ot(t + \" \" + r);\n  }\n}\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */\n\n\nfunction kn(t, e, n) {\n  if (( // If required, replace the FieldPath Compat class with with the firestore-exp\n  // FieldPath.\n  e = getModularInstance(e)) instanceof mn) return e._internalPath;\n  if (\"string\" == typeof e) return Mn(t, e);\n  throw Qn(\"Field path arguments must be of type string or FieldPath.\", t,\n  /* hasConverter= */\n  !1,\n  /* path= */\n  void 0, n);\n}\n/**\n * Matches any characters in a field path string that are reserved.\n */\n\n\nvar Bn = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */\n\nfunction Mn(t, e, n) {\n  if (e.search(Bn) >= 0) throw Qn(\"Invalid field path (\".concat(e, \"). Paths must not contain '~', '*', '/', '[', or ']'\"), t,\n  /* hasConverter= */\n  !1,\n  /* path= */\n  void 0, n);\n\n  try {\n    return _construct(mn, _toConsumableArray(e.split(\".\")))._internalPath;\n  } catch (r) {\n    throw Qn(\"Invalid field path (\".concat(e, \"). Paths must not be empty, begin with '.', end with '.', or contain '..'\"), t,\n    /* hasConverter= */\n    !1,\n    /* path= */\n    void 0, n);\n  }\n}\n\nfunction Qn(t, e, n, r, s) {\n  var i = r && !r.isEmpty(),\n      o = void 0 !== s;\n  var u = \"Function \".concat(e, \"() called with invalid data\");\n  n && (u += \" (via `toFirestore()`)\"), u += \". \";\n  var c = \"\";\n  return (i || o) && (c += \" (found\", i && (c += \" in field \".concat(r)), o && (c += \" in document \".concat(s)), c += \")\"), new L(I, u + t + c);\n}\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */\n\n\nfunction zn(t, e) {\n  return t.some(function (t) {\n    return t.isEqual(e);\n  });\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */\n\n\nvar Gn = /*#__PURE__*/function () {\n  // Note: This class is stripped down version of the DocumentSnapshot in\n  // the legacy SDK. The changes are:\n  // - No support for SnapshotMetadata.\n  // - No support for SnapshotOptions.\n\n  /** @hideconstructor protected */\n  function Gn(t, e, n, r, s) {\n    _classCallCheck(this, Gn);\n\n    this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, this._converter = s;\n  }\n  /** Property of the `DocumentSnapshot` that provides the document's ID. */\n\n\n  _createClass(Gn, [{\n    key: \"id\",\n    get: function get() {\n      return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */\n\n  }, {\n    key: \"ref\",\n    get: function get() {\n      return new un(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */\n\n  }, {\n    key: \"exists\",\n    value: function exists() {\n      return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */\n\n  }, {\n    key: \"data\",\n    value: function data() {\n      if (this._document) {\n        if (this._converter) {\n          // We only want to use the converter and create a new DocumentSnapshot\n          // if a converter has been provided.\n          var t = new Wn(this._firestore, this._userDataWriter, this._key, this._document,\n          /* converter= */\n          null);\n          return this._converter.fromFirestore(t);\n        }\n\n        return this._userDataWriter.convertValue(this._document.data.value);\n      }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"get\",\n    value: function get(t) {\n      if (this._document) {\n        var e = this._document.data.field(Kn(\"DocumentSnapshot.get\", t));\n\n        if (null !== e) return this._userDataWriter.convertValue(e);\n      }\n    }\n  }]);\n\n  return Gn;\n}();\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */\n\n\nvar Wn = /*#__PURE__*/function (_Gn) {\n  _inherits(Wn, _Gn);\n\n  var _super28 = _createSuper(Wn);\n\n  function Wn() {\n    _classCallCheck(this, Wn);\n\n    return _super28.apply(this, arguments);\n  }\n\n  _createClass(Wn, [{\n    key: \"data\",\n    value:\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    function data() {\n      return _get(_getPrototypeOf(Wn.prototype), \"data\", this).call(this);\n    }\n  }]);\n\n  return Wn;\n}(Gn);\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */\n\n\nvar Hn = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function Hn(t, e) {\n    _classCallCheck(this, Hn);\n\n    this._docs = e, this.query = t;\n  }\n  /** An array of all the documents in the `QuerySnapshot`. */\n\n\n  _createClass(Hn, [{\n    key: \"docs\",\n    get: function get() {\n      return _toConsumableArray(this._docs);\n    }\n    /** The number of documents in the `QuerySnapshot`. */\n\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this.docs.length;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */\n\n  }, {\n    key: \"empty\",\n    get: function get() {\n      return 0 === this.docs.length;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */\n\n  }, {\n    key: \"forEach\",\n    value: function forEach(t, e) {\n      this._docs.forEach(t, e);\n    }\n  }]);\n\n  return Hn;\n}();\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */\n\n\nfunction Yn(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), t instanceof Gn && e instanceof Gn ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof Hn && e instanceof Hn && wn(t.query, e.query) && mt(t.docs, e.docs, Yn);\n}\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */\n\n\nfunction Kn(t, e) {\n  return \"string\" == typeof e ? Mn(t, e) : e instanceof mn ? e._internalPath : e._delegate._internalPath;\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link\n * endBefore:1}, {@link (endAt:1)}, {@link limit} or {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\n\n\nvar Jn = function Jn() {\n  _classCallCheck(this, Jn);\n};\n/**\n * Creates a new immutable instance of {@link Query} that is extended to also include\n * additional query constraints.\n *\n * @param query - The {@link Query} instance to use as a base for the new constraints.\n * @param queryConstraints - The list of {@link QueryConstraint}s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */\n\n\nfunction Zn(t) {\n  for (var _len8 = arguments.length, e = new Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {\n    e[_key8 - 1] = arguments[_key8];\n  }\n\n  for (var _i3 = 0, _e14 = e; _i3 < _e14.length; _i3++) {\n    var n = _e14[_i3];\n    t = n._apply(t);\n  }\n\n  return t;\n}\n\nvar Xn = /*#__PURE__*/function (_Jn) {\n  _inherits(Xn, _Jn);\n\n  var _super29 = _createSuper(Xn);\n\n  function Xn(t, e, n) {\n    var _this28;\n\n    _classCallCheck(this, Xn);\n\n    _this28 = _super29.call(this), _this28.ft = t, _this28.dt = e, _this28.wt = n, _this28.type = \"where\";\n    return _this28;\n  }\n\n  _createClass(Xn, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      var e = Pn(t.firestore),\n          n = function (t, e, n, r, s, i, o) {\n        var u;\n\n        if (s.isKeyField()) {\n          if (\"array-contains\"\n          /* ARRAY_CONTAINS */\n          === i || \"array-contains-any\"\n          /* ARRAY_CONTAINS_ANY */\n          === i) throw new L(I, \"Invalid Query. You can't perform '\".concat(i, \"' queries on FieldPath.documentId().\"));\n\n          if (\"in\"\n          /* IN */\n          === i || \"not-in\"\n          /* NOT_IN */\n          === i) {\n            wr(o, i);\n            var _e15 = [];\n\n            var _iterator8 = _createForOfIteratorHelper(o),\n                _step8;\n\n            try {\n              for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                var _n16 = _step8.value;\n\n                _e15.push(dr(r, t, _n16));\n              }\n            } catch (err) {\n              _iterator8.e(err);\n            } finally {\n              _iterator8.f();\n            }\n\n            u = {\n              arrayValue: {\n                values: _e15\n              }\n            };\n          } else u = dr(r, t, o);\n        } else \"in\"\n        /* IN */\n        !== i && \"not-in\"\n        /* NOT_IN */\n        !== i && \"array-contains-any\"\n        /* ARRAY_CONTAINS_ANY */\n        !== i || wr(o, i), u = On(n, e, o,\n        /* allowArrays= */\n        \"in\"\n        /* IN */\n        === i || \"not-in\"\n        /* NOT_IN */\n        === i);\n\n        var c = Qt.create(s, i, u);\n        return function (t, e) {\n          if (e.D()) {\n            var _n17 = oe(t);\n\n            if (null !== _n17 && !_n17.isEqual(e.field)) throw new L(I, \"Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '\".concat(_n17.toString(), \"' and '\").concat(e.field.toString(), \"'\"));\n\n            var _r6 = ie(t);\n\n            null !== _r6 && mr(t, e.field, _r6);\n          }\n\n          var n = function (t, e) {\n            var _iterator9 = _createForOfIteratorHelper(t.filters),\n                _step9;\n\n            try {\n              for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n                var _n18 = _step9.value;\n                if (e.indexOf(_n18.op) >= 0) return _n18.op;\n              }\n            } catch (err) {\n              _iterator9.e(err);\n            } finally {\n              _iterator9.f();\n            }\n\n            return null;\n          }(t,\n          /**\n          * Given an operator, returns the set of operators that cannot be used with it.\n          *\n          * Operators in a query must adhere to the following set of rules:\n          * 1. Only one array operator is allowed.\n          * 2. Only one disjunctive operator is allowed.\n          * 3. `NOT_EQUAL` cannot be used with another `NOT_EQUAL` operator.\n          * 4. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n          *\n          * Array operators: `ARRAY_CONTAINS`, `ARRAY_CONTAINS_ANY`\n          * Disjunctive operators: `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`\n          */\n          function (t) {\n            switch (t) {\n              case \"!=\"\n              /* NOT_EQUAL */\n              :\n                return [\"!=\"\n                /* NOT_EQUAL */\n                , \"not-in\"\n                /* NOT_IN */\n                ];\n\n              case \"array-contains\"\n              /* ARRAY_CONTAINS */\n              :\n                return [\"array-contains\"\n                /* ARRAY_CONTAINS */\n                , \"array-contains-any\"\n                /* ARRAY_CONTAINS_ANY */\n                , \"not-in\"\n                /* NOT_IN */\n                ];\n\n              case \"in\"\n              /* IN */\n              :\n                return [\"array-contains-any\"\n                /* ARRAY_CONTAINS_ANY */\n                , \"in\"\n                /* IN */\n                , \"not-in\"\n                /* NOT_IN */\n                ];\n\n              case \"array-contains-any\"\n              /* ARRAY_CONTAINS_ANY */\n              :\n                return [\"array-contains\"\n                /* ARRAY_CONTAINS */\n                , \"array-contains-any\"\n                /* ARRAY_CONTAINS_ANY */\n                , \"in\"\n                /* IN */\n                , \"not-in\"\n                /* NOT_IN */\n                ];\n\n              case \"not-in\"\n              /* NOT_IN */\n              :\n                return [\"array-contains\"\n                /* ARRAY_CONTAINS */\n                , \"array-contains-any\"\n                /* ARRAY_CONTAINS_ANY */\n                , \"in\"\n                /* IN */\n                , \"not-in\"\n                /* NOT_IN */\n                , \"!=\"\n                /* NOT_EQUAL */\n                ];\n\n              default:\n                return [];\n            }\n          }(e.op));\n\n          if (null !== n) // Special case when it's a duplicate op to give a slightly clearer error message.\n            throw n === e.op ? new L(I, \"Invalid query. You cannot use more than one '\".concat(e.op.toString(), \"' filter.\")) : new L(I, \"Invalid query. You cannot use '\".concat(e.op.toString(), \"' filters with '\").concat(n.toString(), \"' filters.\"));\n        }(t, c), c;\n      }(t._query, \"where\", e, t.firestore._databaseId, this.ft, this.dt, this.wt);\n\n      return new cn(t.firestore, t.converter, function (t, e) {\n        var n = t.filters.concat([e]);\n        return new re(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n      }(t._query, n));\n    }\n  }]);\n\n  return Xn;\n}(Jn);\n/**\n * Creates a {@link QueryConstraint} that enforces that documents must contain the\n * specified field and that the value should satisfy the relation constraint\n * provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link Query}.\n */\n\n\nfunction tr(t, e, n) {\n  var r = e,\n      s = Kn(\"where\", t);\n  return new Xn(s, r, n);\n}\n\nvar er = /*#__PURE__*/function (_Jn2) {\n  _inherits(er, _Jn2);\n\n  var _super30 = _createSuper(er);\n\n  function er(t, e) {\n    var _this29;\n\n    _classCallCheck(this, er);\n\n    _this29 = _super30.call(this), _this29.ft = t, _this29.yt = e, _this29.type = \"orderBy\";\n    return _this29;\n  }\n\n  _createClass(er, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      var e = function (t, e, n) {\n        if (null !== t.startAt) throw new L(I, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n        if (null !== t.endAt) throw new L(I, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n        var r = new te(e, n);\n        return function (t, e) {\n          if (null === ie(t)) {\n            // This is the first order by. It must match any inequality.\n            var _n19 = oe(t);\n\n            null !== _n19 && mr(t, _n19, e.field);\n          }\n        }(t, r), r;\n      }\n      /**\n      * Create a `Bound` from a query and a document.\n      *\n      * Note that the `Bound` will always include the key of the document\n      * and so only the provided document will compare equal to the returned\n      * position.\n      *\n      * Will throw if the document does not contain all fields of the order by\n      * of the query or if any of the fields in the order by are an uncommitted\n      * server timestamp.\n      */\n      (t._query, this.ft, this.yt);\n\n      return new cn(t.firestore, t.converter, function (t, e) {\n        // TODO(dimond): validate that orderBy does not list the same key twice.\n        var n = t.explicitOrderBy.concat([e]);\n        return new re(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n      }(t._query, e));\n    }\n  }]);\n\n  return er;\n}(Jn);\n/**\n * Creates a {@link QueryConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link Query}.\n */\n\n\nfunction nr(t) {\n  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"asc\";\n  var n = e,\n      r = Kn(\"orderBy\", t);\n  return new er(r, n);\n}\n\nvar rr = /*#__PURE__*/function (_Jn3) {\n  _inherits(rr, _Jn3);\n\n  var _super31 = _createSuper(rr);\n\n  function rr(t, e, n) {\n    var _this30;\n\n    _classCallCheck(this, rr);\n\n    _this30 = _super31.call(this), _this30.type = t, _this30._t = e, _this30.gt = n;\n    return _this30;\n  }\n\n  _createClass(rr, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      return new cn(t.firestore, t.converter, function (t, e, n) {\n        return new re(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n      }(t._query, this._t, this.gt));\n    }\n  }]);\n\n  return rr;\n}(Jn);\n/**\n * Creates a {@link QueryConstraint} that only returns the first matching documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */\n\n\nfunction sr(t) {\n  return st(\"limit\", t), new rr(\"limit\", t, \"F\"\n  /* First */\n  );\n}\n/**\n * Creates a {@link QueryConstraint} that only returns the last matching documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */\n\n\nfunction ir(t) {\n  return st(\"limitToLast\", t), new rr(\"limitToLast\", t, \"L\"\n  /* Last */\n  );\n}\n\nvar or = /*#__PURE__*/function (_Jn4) {\n  _inherits(or, _Jn4);\n\n  var _super32 = _createSuper(or);\n\n  function or(t, e, n) {\n    var _this31;\n\n    _classCallCheck(this, or);\n\n    _this31 = _super32.call(this), _this31.type = t, _this31.bt = e, _this31.vt = n;\n    return _this31;\n  }\n\n  _createClass(or, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      var e = fr(t, this.type, this.bt, this.vt);\n      return new cn(t.firestore, t.converter, function (t, e) {\n        return new re(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n      }(t._query, e));\n    }\n  }]);\n\n  return or;\n}(Jn);\n\nfunction ur() {\n  for (var _len9 = arguments.length, t = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n    t[_key9] = arguments[_key9];\n  }\n\n  return new or(\"startAt\", t,\n  /*before=*/\n  !0);\n}\n\nfunction cr() {\n  for (var _len10 = arguments.length, t = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n    t[_key10] = arguments[_key10];\n  }\n\n  return new or(\"startAfter\", t,\n  /*before=*/\n  !1);\n}\n\nvar ar = /*#__PURE__*/function (_Jn5) {\n  _inherits(ar, _Jn5);\n\n  var _super33 = _createSuper(ar);\n\n  function ar(t, e, n) {\n    var _this32;\n\n    _classCallCheck(this, ar);\n\n    _this32 = _super33.call(this), _this32.type = t, _this32.bt = e, _this32.vt = n;\n    return _this32;\n  }\n\n  _createClass(ar, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      var e = fr(t, this.type, this.bt, this.vt);\n      return new cn(t.firestore, t.converter, function (t, e) {\n        return new re(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n      }(t._query, e));\n    }\n  }]);\n\n  return ar;\n}(Jn);\n\nfunction hr() {\n  for (var _len11 = arguments.length, t = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n    t[_key11] = arguments[_key11];\n  }\n\n  return new ar(\"endBefore\", t,\n  /*before=*/\n  !0);\n}\n\nfunction lr() {\n  for (var _len12 = arguments.length, t = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {\n    t[_key12] = arguments[_key12];\n  }\n\n  return new ar(\"endAt\", t,\n  /*before=*/\n  !1);\n}\n/** Helper function to create a bound from a document or fields */\n\n\nfunction fr(t, e, n, r) {\n  if (n[0] = getModularInstance(n[0]), n[0] instanceof Gn) return function (t, e, n, r, s) {\n    if (!r) throw new L(P, \"Can't use a DocumentSnapshot that doesn't exist for \".concat(n, \"().\"));\n    var i = []; // Because people expect to continue/end a query at the exact document\n    // provided, we need to use the implicit sort order rather than the explicit\n    // sort order, because it's guaranteed to contain the document key. That way\n    // the position becomes unambiguous and the query continues/ends exactly at\n    // the provided document. Without the key (by using the explicit sort\n    // orders), multiple documents could match the position, yielding duplicate\n    // results.\n\n    var _iterator10 = _createForOfIteratorHelper(ce(t)),\n        _step10;\n\n    try {\n      for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n        var _n20 = _step10.value;\n        if (_n20.field.isKeyField()) i.push(qt(e, r.key));else {\n          var _t19 = r.data.field(_n20.field);\n\n          if (Pt(_t19)) throw new L(I, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + _n20.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n\n          if (null === _t19) {\n            var _t20 = _n20.field.canonicalString();\n\n            throw new L(I, \"Invalid query. You are trying to start or end a query using a document for which the field '\".concat(_t20, \"' (used as the orderBy) does not exist.\"));\n          }\n\n          i.push(_t19);\n        }\n      }\n    } catch (err) {\n      _iterator10.e(err);\n    } finally {\n      _iterator10.f();\n    }\n\n    return new Xt(i, s);\n  }\n  /**\n  * Converts a list of field values to a `Bound` for the given query.\n  */\n  (t._query, t.firestore._databaseId, e, n[0]._document, r);\n  {\n    var s = Pn(t.firestore);\n    return function (t, e, n, r, s, i) {\n      // Use explicit order by's because it has to match the query the user made\n      var o = t.explicitOrderBy;\n      if (s.length > o.length) throw new L(I, \"Too many arguments provided to \".concat(r, \"(). The number of arguments must be less than or equal to the number of orderBy() clauses\"));\n      var u = [];\n\n      for (var _i4 = 0; _i4 < s.length; _i4++) {\n        var c = s[_i4];\n\n        if (o[_i4].field.isKeyField()) {\n          if (\"string\" != typeof c) throw new L(I, \"Invalid query. Expected a string for document ID in \".concat(r, \"(), but got a \").concat(typeof c));\n          if (!ue(t) && -1 !== c.indexOf(\"/\")) throw new L(I, \"Invalid query. When querying a collection and ordering by FieldPath.documentId(), the value passed to \".concat(r, \"() must be a plain document ID, but '\").concat(c, \"' contains a slash.\"));\n\n          var _n21 = t.path.child(Y.fromString(c));\n\n          if (!Z.isDocumentKey(_n21)) throw new L(I, \"Invalid query. When querying a collection group and ordering by FieldPath.documentId(), the value passed to \".concat(r, \"() must result in a valid document path, but '\").concat(_n21, \"' is not because it contains an odd number of segments.\"));\n\n          var _s2 = new Z(_n21);\n\n          u.push(qt(e, _s2));\n        } else {\n          var _t21 = On(n, r, c);\n\n          u.push(_t21);\n        }\n      }\n\n      return new Xt(u, i);\n    }\n    /**\n    * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n    * appropriate errors if the value is anything other than a `DocumentReference`\n    * or `string`, or if the string is malformed.\n    */\n    (t._query, t.firestore._databaseId, s, e, n, r);\n  }\n}\n\nfunction dr(t, e, n) {\n  if (\"string\" == typeof (n = getModularInstance(n))) {\n    if (\"\" === n) throw new L(I, \"Invalid query. When querying with FieldPath.documentId(), you must provide a valid document ID, but it was an empty string.\");\n    if (!ue(e) && -1 !== n.indexOf(\"/\")) throw new L(I, \"Invalid query. When querying a collection by FieldPath.documentId(), you must provide a plain document ID, but '\".concat(n, \"' contains a '/' character.\"));\n    var r = e.path.child(Y.fromString(n));\n    if (!Z.isDocumentKey(r)) throw new L(I, \"Invalid query. When querying a collection group by FieldPath.documentId(), the value provided must result in a valid document path, but '\".concat(r, \"' is not because it has an odd number of segments (\").concat(r.length, \").\"));\n    return qt(t, new Z(r));\n  }\n\n  if (n instanceof un) return qt(t, n._key);\n  throw new L(I, \"Invalid query. When querying with FieldPath.documentId(), you must provide a valid string or a DocumentReference, but it was: \".concat(nt(n), \".\"));\n}\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */\n\n\nfunction wr(t, e) {\n  if (!Array.isArray(t) || 0 === t.length) throw new L(I, \"Invalid Query. A non-empty array is required for '\".concat(e.toString(), \"' filters.\"));\n  if (t.length > 10) throw new L(I, \"Invalid Query. '\".concat(e.toString(), \"' filters support a maximum of 10 elements in the value array.\"));\n}\n\nfunction mr(t, e, n) {\n  if (!n.isEqual(e)) throw new L(I, \"Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '\".concat(e.toString(), \"' and so you must also use '\").concat(e.toString(), \"' as your first argument to orderBy(), but your first orderBy() is on field '\").concat(n.toString(), \"' instead.\"));\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\n\n\nfunction pr(t, e, n) {\n  var r; // Cast to `any` in order to satisfy the union type constraint on\n  // toFirestore().\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, r;\n}\n\nvar yr = /*#__PURE__*/function (_ref4) {\n  _inherits(yr, _ref4);\n\n  var _super34 = _createSuper(yr);\n\n  function yr(t) {\n    var _this33;\n\n    _classCallCheck(this, yr);\n\n    _this33 = _super34.call(this), _this33.firestore = t;\n    return _this33;\n  }\n\n  _createClass(yr, [{\n    key: \"convertBytes\",\n    value: function convertBytes(t) {\n      return new yn(t);\n    }\n  }, {\n    key: \"convertReference\",\n    value: function convertReference(t) {\n      var e = this.convertDocumentKey(t, this.firestore._databaseId);\n      return new un(this.firestore,\n      /* converter= */\n      null, e);\n    }\n  }]);\n\n  return yr;\n}( /*#__PURE__*/function () {\n  function _class4() {\n    _classCallCheck(this, _class4);\n  }\n\n  _createClass(_class4, [{\n    key: \"convertValue\",\n    value: function convertValue(t) {\n      var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"none\";\n\n      switch (Dt(t)) {\n        case 0\n        /* NullValue */\n        :\n          return null;\n\n        case 1\n        /* BooleanValue */\n        :\n          return t.booleanValue;\n\n        case 2\n        /* NumberValue */\n        :\n          return It(t.integerValue || t.doubleValue);\n\n        case 3\n        /* TimestampValue */\n        :\n          return this.convertTimestamp(t.timestampValue);\n\n        case 4\n        /* ServerTimestampValue */\n        :\n          return this.convertServerTimestamp(t, e);\n\n        case 5\n        /* StringValue */\n        :\n          return t.stringValue;\n\n        case 6\n        /* BlobValue */\n        :\n          return this.convertBytes(At(t.bytesValue));\n\n        case 7\n        /* RefValue */\n        :\n          return this.convertReference(t.referenceValue);\n\n        case 8\n        /* GeoPointValue */\n        :\n          return this.convertGeoPoint(t.geoPointValue);\n\n        case 9\n        /* ArrayValue */\n        :\n          return this.convertArray(t.arrayValue, e);\n\n        case 10\n        /* ObjectValue */\n        :\n          return this.convertObject(t.mapValue, e);\n\n        default:\n          throw _();\n      }\n    }\n  }, {\n    key: \"convertObject\",\n    value: function convertObject(t, e) {\n      var _this34 = this;\n\n      var n = {};\n      return gt(t.fields, function (t, r) {\n        n[t] = _this34.convertValue(r, e);\n      }), n;\n    }\n  }, {\n    key: \"convertGeoPoint\",\n    value: function convertGeoPoint(t) {\n      return new gn(It(t.latitude), It(t.longitude));\n    }\n  }, {\n    key: \"convertArray\",\n    value: function convertArray(t, e) {\n      var _this35 = this;\n\n      return (t.values || []).map(function (t) {\n        return _this35.convertValue(t, e);\n      });\n    }\n  }, {\n    key: \"convertServerTimestamp\",\n    value: function convertServerTimestamp(t, e) {\n      switch (e) {\n        case \"previous\":\n          var n = Rt(t);\n          return null == n ? null : this.convertValue(n, e);\n\n        case \"estimate\":\n          return this.convertTimestamp(Vt(t));\n\n        default:\n          return null;\n      }\n    }\n  }, {\n    key: \"convertTimestamp\",\n    value: function convertTimestamp(t) {\n      var e = Tt(t);\n      return new pt(e.seconds, e.nanos);\n    }\n  }, {\n    key: \"convertDocumentKey\",\n    value: function convertDocumentKey(t, e) {\n      var n = Y.fromString(t);\n      g(ze(n));\n      var r = new W(n.get(1), n.get(3)),\n          s = new Z(n.popFirst(5));\n      return r.isEqual(e) || // TODO(b/64130202): Somehow support foreign references.\n      m(\"Document \".concat(s, \" contains a document reference within a different database (\").concat(r.projectId, \"/\").concat(r.database, \") which is not supported. It will be treated as a reference in the current database (\").concat(e.projectId, \"/\").concat(e.database, \") instead.\")), s;\n    }\n  }]);\n\n  return _class4;\n}());\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */\n\n\nfunction _r(t) {\n  var e = Xe((t = rt(t, un)).firestore),\n      n = new yr(t.firestore);\n  return Ke(e, [t._key]).then(function (e) {\n    g(1 === e.length);\n    var r = e[0];\n    return new Gn(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n  });\n}\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */\n\n\nfunction gr(t) {\n  !function (t) {\n    if (se(t) && 0 === t.explicitOrderBy.length) throw new L(q, \"limitToLast() queries require specifying at least one orderBy() clause\");\n  }((t = rt(t, cn))._query);\n  var e = Xe(t.firestore),\n      n = new yr(t.firestore);\n  return Je(e, t._query).then(function (e) {\n    var r = e.map(function (e) {\n      return new Wn(t.firestore, n, e.key, e, t.converter);\n    });\n    return se(t._query) && // Limit to last queries reverse the orderBy constraint that was\n    // specified by the user. As such, we need to reverse the order of the\n    // results to return the documents in the expected order.\n    r.reverse(), new Hn(t, r);\n  });\n}\n\nfunction br(t, e, n) {\n  var r = pr((t = rt(t, un)).converter, e, n),\n      s = Rn(Pn(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n  return Ye(Xe(t.firestore), [s.toMutation(t._key, _e.none())]);\n}\n\nfunction vr(t, e, n) {\n  var s = Pn((t = rt(t, un)).firestore); // For Compat types, we have to \"extract\" the underlying types before\n  // performing validation.\n\n  var i;\n\n  for (var _len13 = arguments.length, r = new Array(_len13 > 3 ? _len13 - 3 : 0), _key13 = 3; _key13 < _len13; _key13++) {\n    r[_key13 - 3] = arguments[_key13];\n  }\n\n  i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof mn ? xn(s, \"updateDoc\", t._key, e, n, r) : qn(s, \"updateDoc\", t._key, e);\n  return Ye(Xe(t.firestore), [i.toMutation(t._key, _e.exists(!0))]);\n}\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */\n\n\nfunction Er(t) {\n  return Ye(Xe((t = rt(t, un)).firestore), [new Ee(t._key, _e.none())]);\n}\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */\n\n\nfunction Tr(t, e) {\n  var n = fn(t = rt(t, an)),\n      r = pr(t.converter, e),\n      s = Rn(Pn(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n  return Ye(Xe(t.firestore), [s.toMutation(n._key, _e.exists(!1))]).then(function () {\n    return n;\n  });\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */\n\n\nfunction Ir() {\n  return new Vn(\"deleteField\");\n}\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */\n\n\nfunction Ar() {\n  return new Nn(\"serverTimestamp\");\n}\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */\n\n\nfunction Pr() {\n  for (var _len14 = arguments.length, t = new Array(_len14), _key14 = 0; _key14 < _len14; _key14++) {\n    t[_key14] = arguments[_key14];\n  }\n\n  // NOTE: We don't actually parse the data until it's used in set() or\n  // update() since we'd need the Firestore instance to do this.\n  return new $n(\"arrayUnion\", t);\n}\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */\n\n\nfunction Rr() {\n  for (var _len15 = arguments.length, t = new Array(_len15), _key15 = 0; _key15 < _len15; _key15++) {\n    t[_key15] = arguments[_key15];\n  }\n\n  // NOTE: We don't actually parse the data until it's used in set() or\n  // update() since we'd need the Firestore instance to do this.\n  return new Fn(\"arrayRemove\", t);\n}\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */\n\n\nfunction Vr(t) {\n  return new Sn(\"increment\", t);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */\n\n\nvar Dr = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function Dr(t, e) {\n    _classCallCheck(this, Dr);\n\n    this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, this._dataReader = Pn(t);\n  }\n\n  _createClass(Dr, [{\n    key: \"set\",\n    value: function set(t, e, n) {\n      this._verifyNotCommitted();\n\n      var r = Nr(t, this._firestore),\n          s = pr(r.converter, e, n),\n          i = Rn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n      return this._mutations.push(i.toMutation(r._key, _e.none())), this;\n    }\n  }, {\n    key: \"update\",\n    value: function update(t, e, n) {\n      this._verifyNotCommitted();\n\n      var s = Nr(t, this._firestore); // For Compat types, we have to \"extract\" the underlying types before\n      // performing validation.\n\n      var i;\n\n      for (var _len16 = arguments.length, r = new Array(_len16 > 3 ? _len16 - 3 : 0), _key16 = 3; _key16 < _len16; _key16++) {\n        r[_key16 - 3] = arguments[_key16];\n      }\n\n      return i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof mn ? xn(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : qn(this._dataReader, \"WriteBatch.update\", s._key, e), this._mutations.push(i.toMutation(s._key, _e.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      this._verifyNotCommitted();\n\n      var e = Nr(t, this._firestore);\n      return this._mutations = this._mutations.concat(new Ee(e._key, _e.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */\n\n  }, {\n    key: \"commit\",\n    value: function commit() {\n      return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n  }, {\n    key: \"_verifyNotCommitted\",\n    value: function _verifyNotCommitted() {\n      if (this._committed) throw new L($, \"A write batch can no longer be used after commit() has been called.\");\n    }\n  }]);\n\n  return Dr;\n}();\n\nfunction Nr(t, e) {\n  if ((t = getModularInstance(t)).firestore !== e) throw new L(I, \"Provided document reference is from a different Firestore instance.\");\n  return t;\n}\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */\n\n\nfunction $r(t) {\n  var e = Xe(t = rt(t, en));\n  return new Dr(t, function (t) {\n    return Ye(e, t);\n  });\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */\n\n\nvar Fr = /*#__PURE__*/function () {\n  function Fr(t) {\n    _classCallCheck(this, Fr);\n\n    this.datastore = t, // The version of each document that was read during this transaction.\n    this.readVersions = new Map(), this.mutations = [], this.committed = !1,\n    /**\n     * A deferred usage error that occurred previously in this transaction that\n     * will cause the transaction to fail once it actually commits.\n     */\n    this.lastWriteError = null,\n    /**\n     * Set of documents that have been written in the transaction.\n     *\n     * When there's more than one write to the same key in a transaction, any\n     * writes after the first are handled differently.\n     */\n    this.writtenDocs = new Set();\n  }\n\n  _createClass(Fr, [{\n    key: \"lookup\",\n    value: function () {\n      var _lookup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(t) {\n        var _this36 = this;\n\n        var e;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(this.ensureCommitNotCalled(), this.mutations.length > 0)) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                throw new L(I, \"Firestore transactions require all reads to be executed before all writes.\");\n\n              case 2:\n                _context2.next = 4;\n                return Ke(this.datastore, t);\n\n              case 4:\n                e = _context2.sent;\n                return _context2.abrupt(\"return\", (e.forEach(function (t) {\n                  return _this36.recordVersion(t);\n                }), e));\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function lookup(_x11) {\n        return _lookup.apply(this, arguments);\n      }\n\n      return lookup;\n    }()\n  }, {\n    key: \"set\",\n    value: function set(t, e) {\n      this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n  }, {\n    key: \"update\",\n    value: function update(t, e) {\n      try {\n        this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n      } catch (t) {\n        this.lastWriteError = t;\n      }\n\n      this.writtenDocs.add(t.toString());\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      this.write(new Ee(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n  }, {\n    key: \"commit\",\n    value: function () {\n      var _commit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _this37 = this;\n\n        var t;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(this.ensureCommitNotCalled(), this.lastWriteError)) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                throw this.lastWriteError;\n\n              case 2:\n                t = this.readVersions; // For each mutation, note that the doc was written.\n\n                this.mutations.forEach(function (e) {\n                  t.delete(e.key.toString());\n                });\n                // For each document that was read but not written to, we want to perform\n                // a `verify` operation.\n                t.forEach(function (t, e) {\n                  var n = Z.fromPath(e);\n\n                  _this37.mutations.push(new Te(n, _this37.precondition(n)));\n                });\n                _context3.next = 7;\n                return Ye(this.datastore, this.mutations);\n\n              case 7:\n                this.committed = !0;\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function commit() {\n        return _commit.apply(this, arguments);\n      }\n\n      return commit;\n    }()\n  }, {\n    key: \"recordVersion\",\n    value: function recordVersion(t) {\n      var e;\n      if (t.isFoundDocument()) e = t.version;else {\n        if (!t.isNoDocument()) throw _(); // For deleted docs, we must use baseVersion 0 when we overwrite them.\n\n        e = yt.min();\n      }\n      var n = this.readVersions.get(t.key.toString());\n\n      if (n) {\n        if (!e.isEqual(n)) // This transaction will fail no matter what.\n          throw new L(F, \"Document version changed between two reads.\");\n      } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */\n\n  }, {\n    key: \"precondition\",\n    value: function precondition(t) {\n      var e = this.readVersions.get(t.toString());\n      return !this.writtenDocs.has(t.toString()) && e ? _e.updateTime(e) : _e.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */\n\n  }, {\n    key: \"preconditionForUpdate\",\n    value: function preconditionForUpdate(t) {\n      var e = this.readVersions.get(t.toString()); // The first time a document is written, we want to take into account the\n      // read time and existence\n\n      if (!this.writtenDocs.has(t.toString()) && e) {\n        if (e.isEqual(yt.min())) // The document doesn't exist, so fail the transaction.\n          // This has to be validated locally because you can't send a\n          // precondition that a document does not exist without changing the\n          // semantics of the backend write to be an insert. This is the reverse\n          // of what we want, since we want to assert that the document doesn't\n          // exist but then send the update and have it fail. Since we can't\n          // express that to the backend, we have to validate locally.\n          // Note: this can change once we can send separate verify writes in the\n          // transaction.\n          throw new L(I, \"Can't update a document that doesn't exist.\"); // Document exists, base precondition on document update time.\n\n        return _e.updateTime(e);\n      } // Document was not read, so we just use the preconditions for a blind\n      // update.\n\n\n      return _e.exists(!0);\n    }\n  }, {\n    key: \"write\",\n    value: function write(t) {\n      this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n  }, {\n    key: \"ensureCommitNotCalled\",\n    value: function ensureCommitNotCalled() {}\n  }]);\n\n  return Fr;\n}();\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\n\n\nvar Sr = /*#__PURE__*/function () {\n  function Sr(t, e, n, r) {\n    _classCallCheck(this, Sr);\n\n    this.asyncQueue = t, this.datastore = e, this.updateFunction = n, this.deferred = r, this.Et = 5, this.Tt = new We(this.asyncQueue, \"transaction_retry\"\n    /* TransactionRetry */\n    );\n  }\n  /** Runs the transaction and sets the result on deferred. */\n\n\n  _createClass(Sr, [{\n    key: \"run\",\n    value: function run() {\n      this.Et -= 1, this.It();\n    }\n  }, {\n    key: \"It\",\n    value: function It() {\n      var _this38 = this;\n\n      this.Tt.G( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var t, e;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                t = new Fr(_this38.datastore), e = _this38.At(t);\n                e && e.then(function (e) {\n                  _this38.asyncQueue.enqueueAndForget(function () {\n                    return t.commit().then(function () {\n                      _this38.deferred.resolve(e);\n                    }).catch(function (t) {\n                      _this38.Pt(t);\n                    });\n                  });\n                }).catch(function (t) {\n                  _this38.Pt(t);\n                });\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      })));\n    }\n  }, {\n    key: \"At\",\n    value: function At(t) {\n      try {\n        var e = this.updateFunction(t);\n        return !it(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), null);\n      } catch (t) {\n        // Do not retry errors thrown by user provided updateFunction.\n        return this.deferred.reject(t), null;\n      }\n    }\n  }, {\n    key: \"Pt\",\n    value: function Pt(t) {\n      var _this39 = this;\n\n      this.Et > 0 && this.Rt(t) ? (this.Et -= 1, this.asyncQueue.enqueueAndForget(function () {\n        return _this39.It(), Promise.resolve();\n      })) : this.deferred.reject(t);\n    }\n  }, {\n    key: \"Rt\",\n    value: function Rt(t) {\n      if (\"FirebaseError\" === t.name) {\n        // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n        // non-matching document versions with ABORTED. These errors should be retried.\n        var e = t.code;\n        return \"aborted\" === e || \"failed-precondition\" === e || !\n        /**\n        * Determines whether an error code represents a permanent error when received\n        * in response to a non-write operation.\n        *\n        * See isPermanentWriteError for classifying write errors.\n        */\n        function (t) {\n          switch (t) {\n            default:\n              return _();\n\n            case E:\n            case T:\n            case A:\n            case N:\n            case x:\n            case O: // Unauthenticated means something went wrong with our token and we need\n            // to retry with new credentials which will happen automatically.\n\n            case D:\n              return !1;\n\n            case I:\n            case P:\n            case R:\n            case V:\n            case $: // Aborted might be retried in some scenarios, but that is dependant on\n            // the context and should handled individually by the calling code.\n            // See https://cloud.google.com/apis/design/errors.\n\n            case F:\n            case S:\n            case q:\n            case C:\n              return !0;\n          }\n        }(e);\n      }\n\n      return !1;\n    }\n  }]);\n\n  return Sr;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** The Platform's 'document' implementation or null if not available. */\n\n\nfunction qr() {\n  // `document` is not always available, e.g. in ReactNative and WebWorkers.\n  // eslint-disable-next-line no-restricted-globals\n  return \"undefined\" != typeof document ? document : null;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */\n\n\nvar xr = /*#__PURE__*/function () {\n  function xr(t, e, n, r, s) {\n    _classCallCheck(this, xr);\n\n    this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, this.deferred = new U(), this.then = this.deferred.promise.then.bind(this.deferred.promise), // It's normal for the deferred promise to be canceled (due to cancellation)\n    // and so we attach a dummy catch callback to avoid\n    // 'UnhandledPromiseRejectionWarning' log spam.\n    this.deferred.promise.catch(function (t) {});\n  }\n  /**\n   * Creates and returns a DelayedOperation that has been scheduled to be\n   * executed on the provided asyncQueue after the provided delayMs.\n   *\n   * @param asyncQueue - The queue to schedule the operation on.\n   * @param id - A Timer ID identifying the type of operation this is.\n   * @param delayMs - The delay (ms) before the operation should be scheduled.\n   * @param op - The operation to run.\n   * @param removalCallback - A callback to be called synchronously once the\n   *   operation is executed or canceled, notifying the AsyncQueue to remove it\n   *   from its delayedOperations list.\n   *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n   *   the DelayedOperation class public.\n   */\n\n\n  _createClass(xr, [{\n    key: \"start\",\n    value:\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */\n    function start(t) {\n      var _this40 = this;\n\n      this.timerHandle = setTimeout(function () {\n        return _this40.handleDelayElapsed();\n      }, t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */\n\n  }, {\n    key: \"skipDelay\",\n    value: function skipDelay() {\n      return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */\n\n  }, {\n    key: \"cancel\",\n    value: function cancel(t) {\n      null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new L(E, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n  }, {\n    key: \"handleDelayElapsed\",\n    value: function handleDelayElapsed() {\n      var _this41 = this;\n\n      this.asyncQueue.enqueueAndForget(function () {\n        return null !== _this41.timerHandle ? (_this41.clearTimeout(), _this41.op().then(function (t) {\n          return _this41.deferred.resolve(t);\n        })) : Promise.resolve();\n      });\n    }\n  }, {\n    key: \"clearTimeout\",\n    value: function (_clearTimeout) {\n      function clearTimeout() {\n        return _clearTimeout.apply(this, arguments);\n      }\n\n      clearTimeout.toString = function () {\n        return _clearTimeout.toString();\n      };\n\n      return clearTimeout;\n    }(function () {\n      null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), this.timerHandle = null);\n    })\n  }], [{\n    key: \"createAndSchedule\",\n    value: function createAndSchedule(t, e, n, r, s) {\n      var i = Date.now() + n,\n          o = new xr(t, e, i, r, s);\n      return o.start(n), o;\n    }\n  }]);\n\n  return xr;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar Or = /*#__PURE__*/function () {\n  function Or() {\n    var _this42 = this;\n\n    _classCallCheck(this, Or);\n\n    // The last promise in the queue.\n    this.Vt = Promise.resolve(), // A list of retryable operations. Retryable operations are run in order and\n    // retried with backoff.\n    this.Dt = [], // Is this AsyncQueue being shut down? Once it is set to true, it will not\n    // be changed again.\n    this.Nt = !1, // Operations scheduled to be queued in the future. Operations are\n    // automatically removed after they are run or canceled.\n    this.$t = [], // visible for testing\n    this.Ft = null, // Flag set while there's an outstanding AsyncQueue operation, used for\n    // assertion sanity-checks.\n    this.St = !1, // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n    this.qt = !1, // List of TimerIds to fast-forward delays for.\n    this.xt = [], // Backoff timer used to schedule retries for retryable operations\n    this.Tt = new We(this, \"async_queue_retry\"\n    /* AsyncQueueRetry */\n    ), // Visibility handler that triggers an immediate retry of all retryable\n    // operations. Meant to speed up recovery when we regain file system access\n    // after page comes into foreground.\n    this.Ot = function () {\n      var t = qr();\n      t && w(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), _this42.Tt.H();\n    };\n    var t = qr();\n    t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Ot);\n  }\n\n  _createClass(Or, [{\n    key: \"isShuttingDown\",\n    get: function get() {\n      return this.Nt;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */\n\n  }, {\n    key: \"enqueueAndForget\",\n    value: function enqueueAndForget(t) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.enqueue(t);\n    }\n  }, {\n    key: \"enqueueAndForgetEvenWhileRestricted\",\n    value: function enqueueAndForgetEvenWhileRestricted(t) {\n      this.Ct(), // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.Lt(t);\n    }\n  }, {\n    key: \"enterRestrictedMode\",\n    value: function enterRestrictedMode(t) {\n      if (!this.Nt) {\n        this.Nt = !0, this.qt = t || !1;\n        var e = qr();\n        e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Ot);\n      }\n    }\n  }, {\n    key: \"enqueue\",\n    value: function enqueue(t) {\n      var _this43 = this;\n\n      if (this.Ct(), this.Nt) // Return a Promise which never resolves.\n        return new Promise(function () {}); // Create a deferred Promise that we can return to the callee. This\n      // allows us to return a \"hanging Promise\" only to the callee and still\n      // advance the queue even when the operation is not run.\n\n      var e = new U();\n      return this.Lt(function () {\n        return _this43.Nt && _this43.qt ? Promise.resolve() : (t().then(e.resolve, e.reject), e.promise);\n      }).then(function () {\n        return e.promise;\n      });\n    }\n  }, {\n    key: \"enqueueRetryable\",\n    value: function enqueueRetryable(t) {\n      var _this44 = this;\n\n      this.enqueueAndForget(function () {\n        return _this44.Dt.push(t), _this44.Ut();\n      });\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */\n\n  }, {\n    key: \"Ut\",\n    value: function () {\n      var _Ut = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var _this45 = this;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!(0 !== this.Dt.length)) {\n                  _context5.next = 14;\n                  break;\n                }\n\n                _context5.prev = 1;\n                _context5.next = 4;\n                return this.Dt[0]();\n\n              case 4:\n                this.Dt.shift();\n                this.Tt.reset();\n                _context5.next = 13;\n                break;\n\n              case 8:\n                _context5.prev = 8;\n                _context5.t0 = _context5[\"catch\"](1);\n\n                if (\n                /**\n                * @license\n                * Copyright 2017 Google LLC\n                *\n                * Licensed under the Apache License, Version 2.0 (the \"License\");\n                * you may not use this file except in compliance with the License.\n                * You may obtain a copy of the License at\n                *\n                *   http://www.apache.org/licenses/LICENSE-2.0\n                *\n                * Unless required by applicable law or agreed to in writing, software\n                * distributed under the License is distributed on an \"AS IS\" BASIS,\n                * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n                * See the License for the specific language governing permissions and\n                * limitations under the License.\n                */\n\n                /** Verifies whether `e` is an IndexedDbTransactionError. */\n                function (t) {\n                  // Use name equality, as instanceof checks on errors don't work with errors\n                  // that wrap other errors.\n                  return \"IndexedDbTransactionError\" === t.name;\n                }\n                /**\n                * @license\n                * Copyright 2020 Google LLC\n                *\n                * Licensed under the Apache License, Version 2.0 (the \"License\");\n                * you may not use this file except in compliance with the License.\n                * You may obtain a copy of the License at\n                *\n                *   http://www.apache.org/licenses/LICENSE-2.0\n                *\n                * Unless required by applicable law or agreed to in writing, software\n                * distributed under the License is distributed on an \"AS IS\" BASIS,\n                * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n                * See the License for the specific language governing permissions and\n                * limitations under the License.\n                */\n                (_context5.t0)) {\n                  _context5.next = 12;\n                  break;\n                }\n\n                throw _context5.t0;\n\n              case 12:\n                // Failure will be handled by AsyncQueue\n                w(\"AsyncQueue\", \"Operation failed with retryable error: \" + _context5.t0);\n\n              case 13:\n                this.Dt.length > 0 && // If there are additional operations, we re-schedule `retryNextOp()`.\n                // This is necessary to run retryable operations that failed during\n                // their initial attempt since we don't know whether they are already\n                // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n                // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n                // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n                // call scheduled here.\n                // Since `backoffAndRun()` cancels an existing backoff and schedules a\n                // new backoff on every call, there is only ever a single additional\n                // operation in the queue.\n                this.Tt.G(function () {\n                  return _this45.Ut();\n                });\n\n              case 14:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[1, 8]]);\n      }));\n\n      function Ut() {\n        return _Ut.apply(this, arguments);\n      }\n\n      return Ut;\n    }()\n  }, {\n    key: \"Lt\",\n    value: function Lt(t) {\n      var _this46 = this;\n\n      var e = this.Vt.then(function () {\n        return _this46.St = !0, t().catch(function (t) {\n          _this46.Ft = t, _this46.St = !1;\n\n          var e =\n          /**\n          * Chrome includes Error.message in Error.stack. Other browsers do not.\n          * This returns expected output of message + stack when available.\n          * @param error - Error or FirestoreError\n          */\n          function (t) {\n            var e = t.message || \"\";\n            t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n            return e;\n          }\n          /**\n          * @license\n          * Copyright 2020 Google LLC\n          *\n          * Licensed under the Apache License, Version 2.0 (the \"License\");\n          * you may not use this file except in compliance with the License.\n          * You may obtain a copy of the License at\n          *\n          *   http://www.apache.org/licenses/LICENSE-2.0\n          *\n          * Unless required by applicable law or agreed to in writing, software\n          * distributed under the License is distributed on an \"AS IS\" BASIS,\n          * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n          * See the License for the specific language governing permissions and\n          * limitations under the License.\n          */\n          // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n          // legacy SDK.\n\n          /**\n          * A reference to a transaction.\n          *\n          * The `Transaction` object passed to a transaction's `updateFunction` provides\n          * the methods to read and write data within the transaction context. See\n          * {@link runTransaction}.\n          */\n          (t); // Re-throw the error so that this.tail becomes a rejected Promise and\n          // all further attempts to chain (via .then) will just short-circuit\n          // and return the rejected Promise.\n\n\n          throw m(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        }).then(function (t) {\n          return _this46.St = !1, t;\n        });\n      });\n      return this.Vt = e, e;\n    }\n  }, {\n    key: \"enqueueAfterDelay\",\n    value: function enqueueAfterDelay(t, e, n) {\n      var _this47 = this;\n\n      this.Ct(), // Fast-forward delays for timerIds that have been overriden.\n      this.xt.indexOf(t) > -1 && (e = 0);\n      var r = xr.createAndSchedule(this, t, e, n, function (t) {\n        return _this47.jt(t);\n      });\n      return this.$t.push(r), r;\n    }\n  }, {\n    key: \"Ct\",\n    value: function Ct() {\n      this.Ft && _();\n    }\n  }, {\n    key: \"verifyOperationInProgress\",\n    value: function verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */\n\n  }, {\n    key: \"kt\",\n    value: function () {\n      var _kt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var t;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                t = this.Vt;\n                _context6.next = 3;\n                return t;\n\n              case 3:\n                if (t !== this.Vt) {\n                  _context6.next = 0;\n                  break;\n                }\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function kt() {\n        return _kt.apply(this, arguments);\n      }\n\n      return kt;\n    }()\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */\n\n  }, {\n    key: \"Bt\",\n    value: function Bt(t) {\n      var _iterator11 = _createForOfIteratorHelper(this.$t),\n          _step11;\n\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var e = _step11.value;\n          if (e.timerId === t) return !0;\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n\n      return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */\n\n  }, {\n    key: \"Mt\",\n    value: function Mt(t) {\n      var _this48 = this;\n\n      // Note that draining may generate more delayed ops, so we do that first.\n      return this.kt().then(function () {\n        // Run ops in the same order they'd run if they ran naturally.\n        _this48.$t.sort(function (t, e) {\n          return t.targetTimeMs - e.targetTimeMs;\n        });\n\n        var _iterator12 = _createForOfIteratorHelper(_this48.$t),\n            _step12;\n\n        try {\n          for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n            var e = _step12.value;\n            if (e.skipDelay(), \"all\"\n            /* All */\n            !== t && e.timerId === t) break;\n          }\n        } catch (err) {\n          _iterator12.e(err);\n        } finally {\n          _iterator12.f();\n        }\n\n        return _this48.kt();\n      });\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */\n\n  }, {\n    key: \"Qt\",\n    value: function Qt(t) {\n      this.xt.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */\n\n  }, {\n    key: \"jt\",\n    value: function jt(t) {\n      // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n      var e = this.$t.indexOf(t);\n      this.$t.splice(e, 1);\n    }\n  }]);\n\n  return Or;\n}();\n\nvar Cr = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function Cr(t, e) {\n    _classCallCheck(this, Cr);\n\n    this._firestore = t, this._transaction = e, this._dataReader = Pn(t);\n  }\n  /**\n   * Reads the document referenced by the provided {@link DocumentReference}.\n   *\n   * @param documentRef - A reference to the document to be read.\n   * @returns A `DocumentSnapshot` with the read data.\n   */\n\n\n  _createClass(Cr, [{\n    key: \"get\",\n    value: function get(t) {\n      var _this49 = this;\n\n      var e = Nr(t, this._firestore),\n          n = new yr(this._firestore);\n      return this._transaction.lookup([e._key]).then(function (t) {\n        if (!t || 1 !== t.length) return _();\n        var r = t[0];\n        if (r.isFoundDocument()) return new Gn(_this49._firestore, n, r.key, r, e.converter);\n        if (r.isNoDocument()) return new Gn(_this49._firestore, n, e._key, null, e.converter);\n        throw _();\n      });\n    }\n  }, {\n    key: \"set\",\n    value: function set(t, e, n) {\n      var r = Nr(t, this._firestore),\n          s = pr(r.converter, e, n),\n          i = Rn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n      return this._transaction.set(r._key, i), this;\n    }\n  }, {\n    key: \"update\",\n    value: function update(t, e, n) {\n      var s = Nr(t, this._firestore); // For Compat types, we have to \"extract\" the underlying types before\n      // performing validation.\n\n      var i;\n\n      for (var _len17 = arguments.length, r = new Array(_len17 > 3 ? _len17 - 3 : 0), _key17 = 3; _key17 < _len17; _key17++) {\n        r[_key17 - 3] = arguments[_key17];\n      }\n\n      return i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof mn ? xn(this._dataReader, \"Transaction.update\", s._key, e, n, r) : qn(this._dataReader, \"Transaction.update\", s._key, e), this._transaction.update(s._key, i), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      var e = Nr(t, this._firestore);\n      return this._transaction.delete(e._key), this;\n    }\n  }]);\n\n  return Cr;\n}();\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */\n\n\nfunction Lr(t, e) {\n  var n = Xe(t = rt(t, en)),\n      r = new U();\n  return new Sr(new Or(), n, function (n) {\n    return e(new Cr(t, n));\n  }, r).run(), r.promise;\n}\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */\n\n\n!function (t) {\n  l = t;\n}(\"\".concat(SDK_VERSION, \"_lite\")), _registerComponent(new Component(\"firestore/lite\", function (t, _ref6) {\n  var e = _ref6.options;\n  var n = t.getProvider(\"app\").getImmediate(),\n      r = new en(n, new M(t.getProvider(\"auth-internal\")));\n  return e && r._setSettings(e), r;\n}, \"PUBLIC\"\n/* PUBLIC */\n)), // RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nregisterVersion(\"firestore-lite\", \"3.3.1\", \"\"), registerVersion(\"firestore-lite\", \"3.3.1\", \"esm2017\");\nexport { yn as Bytes, an as CollectionReference, un as DocumentReference, Gn as DocumentSnapshot, mn as FieldPath, _n as FieldValue, en as Firestore, L as FirestoreError, gn as GeoPoint, cn as Query, Jn as QueryConstraint, Wn as QueryDocumentSnapshot, Hn as QuerySnapshot, pt as Timestamp, Cr as Transaction, Dr as WriteBatch, Tr as addDoc, Rr as arrayRemove, Pr as arrayUnion, hn as collection, ln as collectionGroup, sn as connectFirestoreEmulator, Er as deleteDoc, Ir as deleteField, fn as doc, pn as documentId, lr as endAt, hr as endBefore, _r as getDoc, gr as getDocs, rn as getFirestore, Vr as increment, nn as initializeFirestore, sr as limit, ir as limitToLast, nr as orderBy, Zn as query, wn as queryEqual, dn as refEqual, Lr as runTransaction, Ar as serverTimestamp, br as setDoc, d as setLogLevel, Yn as snapshotEqual, cr as startAfter, ur as startAt, on as terminate, vr as updateDoc, tr as where, $r as writeBatch };"],"names":["_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","from","test","_unsupportedIterableToArray","length","i","F","s","done","value","e","_e16","f","TypeError","err","normalCompletion","didErr","step","next","_e17","return","arr","len","arr2","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","_isNativeReflectConstruct","result","Super","NewTarget","this","arguments","apply","h","t","uid","key","isAuthenticated","UNAUTHENTICATED","GOOGLE_CREDENTIALS","FIRST_PARTY","MOCK_USER","l","w","logLevel","_len","_key","map","y","debug","concat","m","_len2","_key2","error","p","_len3","_key3","warn","JSON","stringify","_","undefined","Error","g","b","E","T","I","A","P","V","D","N","$","S","q","x","O","L","_Error","_super","_this","code","message","j","user","type","authHeaders","Authorization","k","Promise","resolve","enqueueRetryable","M","_this4","auth","onInit","_this5","getToken","then","accessToken","getUid","Q","get","getAuthHeaderValueForFirstParty","z","G","r","u","databaseId","appId","persistenceKey","host","ssl","forceLongPolling","autoDetectLongPolling","useFetchStreams","W","projectId","database","H","segments","offset","comparator","limit","forEach","push","Math","min","_n2","Y","_H","_super2","toArray","join","canonicalString","_len4","_key4","_i","_t2","indexOf","split","filter","K","J","_H2","_super3","replace","isValidIdentifier","_e2","_e3","Z","path","fromString","popFirst","X","et","isDocumentKey","nt","substring","rt","_delegate","ot","ct","at","ut","BatchGetDocuments","Commit","RunQuery","ht","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","lt","_ref","_g","_super4","_this6","_callee","_context","prev","method","headers","body","sent","t0","status","statusText","ok","abrupt","json","stop","_x","_x2","_x3","_x4","_class","databaseInfo","hasOwnProperty","wt","mt","every","pt","seconds","nanoseconds","Date","toMillis","String","padStart","fromMillis","now","getTime","floor","yt","timestamp","_compareTo","isEqual","_t","gt","vt","binaryString","btoa","Uint8Array","charCodeAt","atob","fromCharCode","EMPTY_BYTE_STRING","Et","RegExp","Tt","exec","_t3","substr","Number","nanos","It","At","fromBase64String","fromUint8Array","Pt","mapValue","fields","__type__","stringValue","Rt","__previous_value__","Vt","__local_write_time__","timestampValue","Dt","Nt","booleanValue","bytesValue","referenceValue","geoPointValue","latitude","longitude","integerValue","_n3","doubleValue","isNaN","arrayValue","values","_t4","Ot","Ct","Lt","Ut","assign","_e8","jt","isEmpty","lastSegment","getFieldsMap","popLast","_this7","emptyPath","isImmediateParentOf","_t8","applyChanges","field","_step2","_iterator2","_e9","kt","documentType","version","data","documentState","empty","hasLocalMutations","hasCommittedMutations","clone","Bt","collectionGroup","orderBy","filters","startAt","endAt","Mt","Xt","position","before","te","dir","re","explicitOrderBy","limitType","se","ie","oe","_step3","_iterator3","ce","_t9","isKeyField","keyField","_step4","_t10","_iterator4","_n4","_t11","ae","_step5","_t12","_iterator5","_n5","_e10","Ie","asc","desc","Ae","in","Pe","Ne","fromTimestamp","$e","child","Se","ze","qe","Ue","structuredQuery","parent","collectionId","allDescendants","op","unaryFilter","Me","fieldFilter","Be","compositeFilter","where","direction","ke","je","fieldPath","Ge","He","_ref3","_super21","_this21","credentials","_this22","catch","invalidateToken","_this23","v","_class3","_Je","_callee9","_context9","document","updateTime","newFoundDocument","Ze","Map","Xe","_terminated","has","fetch","bind","_databaseId","app","options","_persistenceKey","_freezeSettings","experimentalForceLongPolling","experimentalAutoDetectLongPolling","_credentials","set","tn","ignoreUndefinedProperties","cacheSizeBytes","en","_settings","_settingsFrozen","_app","_terminateTask","client","sessionIndex","iamToken","_terminate","settings","delete","terminate","rn","getImmediate","un","converter","firestore","an","cn","_query","_cn","_super22","_this24","_path","hn","_len5","_key5","_r2","mn","_len7","_key7","_internalPath","yn","_byteString","toBase64","toUint8Array","gn","isFinite","_lat","_long","Bn","Mn","search","Qn","c","Gn","_firestore","_userDataWriter","_document","_converter","Wn","fromFirestore","convertValue","Kn","_Gn","_super28","Hn","_docs","query","docs","yr","_ref4","_super34","_this33","convertDocumentKey","_class4","convertTimestamp","convertServerTimestamp","convertBytes","convertReference","convertGeoPoint","convertArray","convertObject","_this34","_this35","gr","_x9","_x10","Je","reverse","_ref6","getProvider","_setSettings"],"sourceRoot":""}